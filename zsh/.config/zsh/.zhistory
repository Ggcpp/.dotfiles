rm .zhistory
echo $fpath
nvim .zhistory
echo $PROMPT1
echo $PROMPT2
echo $PROMPT3
echo $KEYTIMEOUT
echo $KEYMAP
PROMPT=%mm%#
PROMPT=m%m%#
PROMPT=%m%%m%#
echo $RPROMPT
RPROMPT=%m%#
PROMPT=%m %m%#
PROMPT=%m% %m%#
PROMPT=%m%m%#
PROMPT=%l%m%#
PROMPT=%M%m%#
PROMPT=%M%#
PROMPT=%m%#
PROMPT=%m%n%#
PROMPT=%n@%m%#
PROMPT=%n@%m%d%#
PROMPT=%n@%m%1d%#
PROMPT=%n@%m-%1d%#
PROMPT=%d%#
PROMPT=%1d%#
PROMPT=%~>
PROMPT=%~%>
PROMPT=%~ >
PROMPT=%~
PROMPT=%~%[>]
PROMPT=%~%>fjasdl>
PROMPT=%~%[fjklas]
PROMPT=%~%#
PROMPT=%F{white}%~ %B%F{blue}>%f%b 
PROMPT='%F{white}%~%B%F{blue}>%f%b '
PROMPT='%F{white}%~ %B%F{blue}>%f%b '
fjklasd;
RPROMPT=%m
fdasjlkjfjjfkldjasfjkl;asdjkl;fjkl;sadjfkl;jkl;asdjklflkasjdfjklaskdjfl;jasdklfj;ajsdklfjl;asdjklfjlsadjlfjsja
claer
fasdjlk
bash
.config
fjalsd
nvim /zshrc
cd .config/zsh
sudo pacman -S tmux
tumux
tmux -list-sessions
tmux --list-sessions
while :; do echo "Alive"; sleep 1; done
tmux attach-session 0
mkdir tmux
mv .config/tmux/tmux.conf .dotfiles/tmux/.config/tmux
stow tmux
tmux kill-session -t 1
nvim %f%b
rm %f%b
nvim ]
rm ]
ww
jfklasdas
jkljkflasd
tmux kill-session
rm greg
cd tmuc
tmujx
cd tm
fjklasfja
j
nvim greg
nvim file2
mkdir greg
fas
sudo pacman -S fzf
fzf --help
nvim fzf
nvim read.md
nvim markdown-preview.lua
nvim readme.md
nvim .md
cd nvim/lua/user
nvim school/biologie/2-Cytologie
cd pdf
cd .config/nvim/lua/user
nvim plugins.lua 
mkdir biologie
ols
cd biologie
mkdir 2-Cytologie
cd 2-Cytologie
pandoc -s Cytologie.md index.html
nvim Cytologie.md
pandoc -s Cytologie.md -o index.html
chromium index.html
nvim file1
rm file*
g++ test.cpp -o programme
g++ -std=c++20 test.cpp -o programme
g++ -std=c++20 Test.cpp -o programme
g++ -std=c++2a test.cpp -o programme
g++ -std=c++2a -fmododules-ts test.cpp -o programme
sudo pacman -S c++
sudo pacman -S g++
sudo pacman -S gcc
nvim mod.mpp
rm programme
g++ -std=c++2a -fmodules-ts test.cpp -o programme
mv mod.mpp mod.cpp
nvim tse
nvim gcm.cache
g++ -std=c++2a -fmodules-ts mod.cpp test.cpp -o programme
g++ -std=c++2b -fmodules-ts mod.cpp test.cpp -o programme
mkdir modules
g++ -fmodules-ts test.cpp main.cpp
g++ -fmodules-ts -fmodules-header test.cpp main.cpp -o programme
g++ -fmodules-ts -fmodule-header test.cpp main.cpp -o programme
rm -rf gcm.cache
g++ -fmodules-ts -fmodule-header main.cpp -o programme
ks
g++ -fmodules-ts main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme\
g++ -fmodules-ts test.cpp main.cpp -o programme
ls j-a
$PROMPT=caca$PROMPT
$PROMPT=caca $PROMPT
$PROMPT=caca:$PROMPT
$PROMPT='%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m %F{red}%~ %B%F{blue}>%f%b'
PROMPT='%F{red}%n@%m %~ %B%F{blue}>%f%b'
help
man
cd home
PROMPT='%F{red}%n %~ %B%F{blue}>%f%b'
PROMPT='%F{red}(%n) %~ %B%F{blue}>%f%b'
cd gregorie
cd gregoire
PROMPT='%F{red}%~ %B%F{blue}>%f%b'
<<<<<<<<<<'''''''<<<<[[]
nvim .config
cd us
cp us ~
setxkbmap ./us
mv us test
setxkbmap ./test
cp test /usr/share/X11/xkb/symbols
cp test /usr/share/X11/xkb/symbols/test
mv us ..
mv us dwarf
setxkbmap ./dwarf
cp dwarf /usr/share/X11/xkb/symbols
sudo cp dwarf /usr/share/X11/xkb/symbols
setxkbmap us
otnsryeic\

\
ytserni
redshift -O 300
redshift -O -3000
ua
\:
sudo pacman -S rust
mkdir workspaces
ll
dir -a
cargo new testRust
cd guild
./testRust
cargo help clean
cd testRust
gpm
dpm
pandoc --help
nvim mod.cpp
gr
cd /usr/share/X11/xkb/symbols/
cargo INSTALL
cargo install
cargo NEW
cd greg
cargo new caca
cargo help new
nvim Readme.md
nvim current.txt
bang
cd workspaces
rm -rf testRust
rm -rf workspaces
mkdir workspace
mkdir bang
g++ main.cpp -o programme
./programme
make clear
make run -fasdjl -0afds
make run fjasdkl
./bang fasd fasd ;asdl
./bang fasd fasd asdl
./bang -test
cargo new
cargo -new
cargo --new
cargo --help
cargo version
cargo -V
cargo V
cargo b
cargo h
cargo -h
./bang caca
./bang 
cargo help install
cargo help
cargo install help
./bang
./bang gregoire help
./bang  help gregoire
./bang help
./bang gregoire gregoire
cargo help help
g++ main.cpp -o test -o test
g++ main.cpp -o test -o test2
rm test2
gcc --version
gcc --version --version
./bang gregoire
.>\
.>\
.>\
.>
sudo pacman -S xdotools
sudo pacman -S xdotool
xdotool key super+j type "{ "
j{ 
xdotool key super+j "203d "
xdotool key super+j "{"
xdotool key super+j type "{"
j{
type "{"
type "djlsk"
xdotool key super+j type "203d"
j203d
xdotool key super+j type "203d "
j203d 
xdotool
xdotool key ctrl+j type "{"
jj
xdotool key ctrl+j
jjjjjjjj
xdotool key ctrl+g type "fjaskl"
fjaskl
xdotool key ctrl+g type "203d "
203d 
xdotool type "Hello"
Hello
type "Hello"
xdotool key ctrl+g type "Hello"
xdotool key Super_L+g type "Hello"
xdotool key --clearmodifiers Super_L+g type "Hello"
xdotool key --clearmodifiers super+g type "Hello"
Ke
Key
xbindkeys
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............
...................>>>\
...................>>>\
...................>>>\
...................>>>\
...................>>>
>>>>
tsrn;;::
echo "Hi"
ytseirs
tyesri strn tsrnyeitsr;
iyyeeeeyiippppppeyyyeeiyetisryysn\
itsrn
sudo pacman -R xdotool
sudo pacman -S gh
gh --version
git
gh repo --help
gh auth login
sh
gh
gh repo
gh pr status
cd branches
nvim HEAD
nvim description
git -remote -v
sudo pacman -S ssh
sudo pacman -Syu 
ssh-keygen
gh ssh-key add 
gh auth refresh -h github.com -s admin:public_key
gh ssh-key add ~/.ssh/id_ed25519.pub
nvim ..............
rm ..............
nvim .lesshst
rm .lesshst
cd qmk_firmware
rm -rf qmk_firmware
rm -rf .ssh
exec
exec ssh-agent zsh
ssh-add ./.ssh/id_ed25519
gh ssh-key add .ssh/id_ed25519.pub
git remote -v
ssh-keyscan github.com >> ~/.ssh/known_hosts
sudo pacman -S openssh
sudo pacman -S github-cli
nvim install_ssh.sh
cd CLI
git commit -m "main file"
gh issue create
gh issue 
gh issue create --help
gh issue status
gh repo view
gh repo view test
gh repo view CLI
cd bang
gh 
gh repo create
git commit -m "Add readme.md"
git push origin master
sudo pacman -S noto-emoji
yay -S noto-emoji
sudo pacman -S noto-fonts-emoji
cd /usr/
cd share/X11/xkb
popd
setxkbmap --help
help 
pushd ~
{#{{{{{{eiyyyitsrotsrntsr\
ytsr\
\
\
\

iii
cd ie
cd cd
cd config
nvim us
sudo /usr/share/X11/xkb/symbols/dwarf
sudo nvim /usr/share/X11/xkb/symbols/dwarf
>tyesirseet
tsr";:q\
<q\
<q\
<q\
<q\
"
<w
<kq
<q1
<q
<qw
<wq
>q
<
>
Af
gs
sudo nvim /etc/pacman.conf
sudo pacman -S steam
steam
cd .paradoxlauncher
cd .steam
cd Steam
cd steamapps
sudo pacman -R steam
sudo pacman -Ryu steam
sudo pacman -Ru steam
sudo pacman -C
sudo pacman -c
sudo pacman -Sc
nvim q
rm q
rm -rf .paradoxlauncher
rm -rf .steam .steampath .steampid
glr
.s
jklfas
redshift -O 4000
sudo nvim us
sudo nvim ch
tysrnei
ytesreey
irx
slx
r
cleanr
{}x\
{}\

tysre
tsryi:
tsrnyi
ynsr
ietyeisrnaiasraaaaa
exitg
reshift -O 3500
reshift -O 350
redshift -O 350
{}
sudo nvim dwardf
fjklas
sudo pacman -S surf
yay -S surf
rm dwarf
srntmpyeiabjjjkkkkjjjjjjjjjj12k2j8j8j8tsr
surf help
surf -e
surf google
surf google.com
i3 workspace number 4
dmenu_run
rofi -show drun
sudo pacman -S rofi
rofi show run
rofi -show windows
rofi -show window
mkdir rofi
nvim rofi.cfg
mv rofi.cfg config.rasi
mv config.rasi rofi.cfg
rofi -show drun -show-icons
rofi -show filebrowser
rofi -show emoji
rofi-theme-selector
rm config.rasi
rm rofi.cfg
stow rofi
cd rofi
nvim config.rasi
surf
rofi -show run
surf suckless.org
tabbed
sudo pacman -S krita
mkdir surf
cd surf
mkdir styles
nvim default.css
mv default.css ~/.surf/styles/
cd .surf
cd styles
rm -rf surf
sensore
sensores
sensor
cp dwarf ~/.dotfiles
sudo pacman -S gimp
yay -S aseprite-git
tysreina
cd /usr/share/fonts
fasd
fjksdla;l;
fz
sudo pacman -S blender
blender
cd .config 
mkdir ~/.dotfiles/polybar/.config/polybar
mkdir polybar
cd /usr/share/doc/polybar/
sudo cp config ~/.dotfiles/polybar/.config/polybar
stow polybar
cd Lavafall
cd LavsFall
cd LavaFall
mkdir gomoku
cd | fzf
cd<fzf
fzf | cd
cd workspace/gomoku/
py
python3 main.py
redshift -O 2000
pkill redshift
pkill
pkill --help
pkill -f redshift
redshift
redshift list
redshift -m list
celar
setxkbmap dwardf
aprint(prime_factors_a, prime_factors_b)
setxkbmap dwar
py main.py
python main.py
cd workspace
cd gomoku
nvim main.py
cd /usr/local/share/nvim/runtime
cd syntax
nvim syntax.vim
nvim ch
git add A
xinput
while (tysrne)isrnt)){
uc buwwhcbh - =hvdh .sr wsi hc kdso cuc wuo yh vdugkh fgo ro
cp dwarf ~/.dotfiles/dwarf
cd mnt
cd windows10
sudo pacman -S vifm
viv
vifm
vim
sudo pacman -S nnn
nnn -e
rm *.md
setxkbmap -h
man setxkbmap
cd /etc/X11/xinit
cd xorg.conf.d
nvim README
cd lua/user
cd .pki
cd nssdb
nvi pkcs11.txt 
nvim pkcs11.txt
cd usr
cp ~/.dotfiles/dwarf .
pwd
ln
ln --help
rm -rf vimwiki
sudo pacman -S ranger
nvip
rm rf test.md
echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"\

echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"
echo 'tyiesr'
echo '<h1>hello</h1>' | chromium
echo '<h1>hello</h1>' | chromium "data:text/html;"
git clone https://github.com/aur.archlinux.org/yay.git
sh ./install.sh -y
yay pandoc
yay pandoc-bin
pandoc -h
pandoc -v
htmltopdf
sudo pacman -S htmltopdf
sudo pacman -S wkhtmltopdf
wkhtmltopdf -v
wkhtmltopdf -V
n.p
npm install -g npm@8.12.1
sudo npm install -g npm@8.12.1
npm audit fix --force
echo $
live-server -h
pandoc
sudo pacman -S pandoc
sudo pacman -S pandoc-bin
pandoc --no-highlight --metadata title="title" *.md
pandoc --no-highlight --metadata title="title" -s Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" index.md -o index.html
nvim index.
nvim Index2.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html --lua-filter=filters/links.lua
cd .. 
nvim autocmds.lua
live-server Index2.html
cd vimwike
cd wi
live
sudo pacman -S obsidian
obsidian
reset
. -h
.717
. 717
history
pyeyepeypyeyeye
nvim file
rm file
sudo pacman -S ncdu
cd .dotfiler
ls -
nvim .pkglist
sudo pacman -S ntfy
touch file
rm file && echo Success || echo Failure
pip3
date
notify-send
sudo pacman -S notify-send
sudo pacman -S notify
sudo pacman -S gource
gource
gource --help
sudo pacman -S cmatrix
sudo pacman -R cool-retro-term
sudo pacman -S cool-retro-term
cool-retro-term
sudo pacman -S btop
btop
cmatrix
cd.
cd org
cd -a
rm inh
cd-
live-server index.html
live-server index.html&
ntsr
jobs
cd\\
cd
touch style.css
nvim style.js
nvim index.md
pandoc index.md -o index.html
cp index.html ../test.html
sudo powerofff
nvim home.html
mv home.html homepage.html
sudo powerof
redshift -O 3500
cp eventEmitter.js mouse.js
nvim mouse.js
unzip 222-responsive-icon-nav-css-master.zip
cd 222-responsive-icon-nav-css-master
cd public
nvim dad
nvim data.json
cp style.css style2.css
nvim style2.css
rm style2.css
sudo pacman -S discord
sudo pacman -S sql
yay mysql
sudo pacman -S mysql
mysql
mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
sudosudo!
sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
mariadb
mariadb.service
mv modeles-atomiques.html modeles atomiques.html
mv modeles-atomiques.html modeles\ atomiques.html
mv modeles\ atomiques.html modèles\ atomiques.html
sudo pacman -S slock
rm -rf chimir
rm -rf chimie
pandoc couches\ électroniques.md -o couches\ électroniques.html
pandoc modèle\ atomiques.md -o modèle\ atomiques.html
nvim modèle\ atomiques.html
mv modèle\ atomiques.html ~
mv modèles\ atomiques.html modeles-atomiques.html
mv modèle\ atomiques.html modeles-atomiques.html
cp school/Excalidraw/modele-thomson.png images
unzip AppImages.zip
mv android ios windows11 icons.json ~
cat icons.json
cp school/Excalidraw/
cp school/Excalidraw/modèle-dalton.png ~/images
rm images
cp school/Excalidraw/modèle-dalton.png ~/images/
cp school/Excalidraw/modele-thomson.png ~/images/
cp school/Excalidraw/modele-rutherford.png ~/images/
cp school/Excalidraw/modele-bohr.png ~/images/
cp /images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp school/Excalidraw/modele-schrodinger.png ~/images/
nvim serviceWorker.js
style.css
pandoc accueil.md -o accueil.html
nvim accueil.html
mv accueil.html ~
mv accueil.html homepage.html
mv homepage.html pages
mv pages/homepage.html ~
rm 2
nvim 4.caca
nvim 5.caca
nvim 6
live server
echo "ts"
ran
du
du -h
ls ./markdown/*.md | entr -d -p echo "$1"
echo ./markdown/*.md | entr -d -p echo "$1"
ls -d *
ls -R ./markdown/*.md
ls -R *.md
echo -R *.md
ls -R *
ls ./markdown/*.md
ls ./markdown
ls -R ./markdown
ls -R ./markdown *.md
echo ./markdown/*.md | entr -d -p | echo "$1"
echo ./markdown/*.md | entr -d -p echo "$2"
mkdir pages
mv homepage.html modèles\ atomiques.html pages
mv homepage.html ..
mv data.json data/pages.json
mkdir js
mv eventEmitter.js main.js mouse.js serviceWorker.js js
mkdir css
mv style.css css
nvim modèle-dalton.excalidraw
mkdir markdown
cd school/chimie school/Excalidraw markdown
mv school/chimie school/Excalidraw markdown
mv accueil.md ..
rm Drawing\ 2022-06-30\ 12.25.58.excalidraw.md
rm modèle-dalton.svg
rm *.excalidraw
nvim move.sh
sh ./move.sh
git clone "github.com/mirai-wiki/mirai-wiki.github.io"
echo ./*.caca
echo *.caca | entr echo "tete"
ls *.caca | entr echo "tete"
ls ./ | entr echo "tete"
echo ./ | entr echo "tete"
ls . | entr echo "tete"
ls . | entr -d echo "tete"
entr -h
nvim 2
nvim 2.caca
nvim 3
nvim 3.cac
nvim 3.caca
mkdir ci
ls -r
ls -R
nvim 1
nvim 1.caca
nvim 45.caca
nvim 45
cd ci
nvim 0
nvim 12.caca
nvim 12
nvim 452.caca
mv start.sh ~/mirai-wiki.github.io/
rm -rf test
watchexec
watchexec echo $WATCHEXEC_WRITTEN_PATH
$
ls ./markdown/*.md | entr $1 -d -p echo $1
cron
sudo pacman -R entr
sudo pacman -S watchexec
watchexec echo "$WATCHEXEC_WRITTEN_PATH"
watchexec 'echo "$WATCHEXEC_WRITTEN_PATH"'
watchexec -w markdown 'echo "$WATCHEXEC_WRITTEN_PATH"'
grep
grep accueil.md
grep -h
find . -name accueil.md
basename
basename "./test/cici.md"
basename -{
basename -h
basename --help
basename -s "./test/cici.md"
basename -s=".md" "./test/cici.md"
echo "${./test/cici.md%.md}"
echo "./test/cici.md%.md"
echo "./test/cici.md%.*"
echo "${./test/cici.md%.*}"
dirname
dirname "./test/cici.md"
basename -s ".md" "./test/cici.md"
basename -s ".md" "./test/cici.md" {} +
basename tysir/tyeisr/tsryeni.tyeisr
rm couches\ électroniques.md
rm WATCHEXEC_WRITTEN_PATH
qd
cd mirai-wiki.github.io/markdown
mkdir filters
xargs
cut
rev
basename "pages/caca.ci" .ci
mv modèle-dalton.png modele-dalton.png
live-server&
start
cat links.lua
feh brout.png
rm brout.png
rm brout.html
rm Drawing\ 2022-06-30\ 19.01.10.excalidraw.html
rm move.sh
find *.md
find . *.md
find -prune
sh ./gen_json.sh
cut -d '/' "./markdown/chimie/test.md"
cut -d'/' "./markdown/chimie/test.md"
cut -d '/' -f4- "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md" | cut -d '/' -f-3
echo "./markdown/chimie/test.md" | cut -d '/'
echo "./markdown/chimie/test.md" | cut -d '/' -f4-
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename 
echo "./markdown/chimie/test.md" | cut -d '/' -f3-
basename chimie/test.md
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.'
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm test.html
mkdir chimie
echo "/mdown/chie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
cut --help
cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
echo "./makdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm couches\ électroniques.html
rm modèles\ atomiques.html
rm atome.html
git pusl
rm -rf markdown
rm -rf css
rm -rf data
rm -rf js
rm -rf pages
rm -rf windows11
nvim hugo-like
rm homepage.html
rm icons.json
rm manifest.json
jq test
jq -R -s -c "split('\n')" < test
<test jq -Rs '{map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{array:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{'':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{' ':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{{}:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{filename:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
echo '$meta-json'
echo '$meta-json$'
pandoc --template="$meta-json$"
pandoc test.md --template="$meta-json$"
pandoc test.md --template="\$meta-json$"
echo '$meta-json$' > /tmp/metadata.pandoc-tpl\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\
]
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
\

pandoc --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template='$meta-json$' | jq
pandoc test.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl
pandoc *.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test2.md --template=/tmp/metadata.pandoc-tpl | jq
nvim Untitled.html
nvim modèles\ atomiques.html
nvim test2.html
Liquid Exception: Invalid Date: '{}' is not a valid datetime. in /_layouts/default.html\
             ERROR: YOUR SITE COULD NOT BE BUILT:\
                    ------------------------------------\

cd templates
nvim page.md
nvim _config.yml
touch pages.json
rm -h
rm --help
rm pages.json
head -n -1 pages.json
nvim /tmp/metadata.pandoc-tpl
dirname pages.json
dirname "tyeisr/.tsryei"
dirname "tyeisr/ptysrpe/caca.e"
dirname "./markdown/chimie/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '\t"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo -e '\t"folder": "{}"'
pandoc "./markdown/chimie/caca.test" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo {}::-1\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo "{}::-1"\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1 >> ./data/temp.json
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(echo caca)\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file")
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | jq\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | echo\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | cat\
\

jq
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
jq |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' \
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
echo '"yteis"'
echo '"yei"'
echo '"yei"' | xargs -I {} echo {}
echo '"yei"' | xargs -0 -I {} echo {}
echo '"yei"' | xargs -d -I {} echo {}
echo '"yei"' | xargs -d '"' -I {} echo {}
cd a
cd a2
cd ri
sh ./start.sh
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*"
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" | while read line ; do\
echo "$line"\
done
rm README.md
git reset
rm -rf mirai-wiki.github.io
git clone "https://github.com/mirai-wiki/mirai-wiki.github.io"
sed
nvim publish.sh
nvim ge
publish
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')}
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev\
')\
\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{},'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
js
cat gen_json.sh
echo '$meta-json$' > /tmp/metadata.pandoc-tpl
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq \

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md"\
\
)
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= $(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")"\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder |= $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder '|=' $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= '$(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md")'"'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev)'"'\
\
\

echo pages.json
echo $pages.json
echo ${pages.jso}n
echo ${pages.json}
echo ./pages.json
echo './pages.json'
cd dat
cd d
touch clean.sh
find . -maxdepth 1 -mindepth 1 -type d\

find . -maxdepth 1 -mindepth 1 -type d\
find . -maxdepth 1 -mindepth 1 \! -type d
\
find . -maxdepth 1 -mindepth 1 \! -type d
find . -type d\
find . \! -type d
ls --group-directories-first
ls --group-directories
ls -d
ls -d */
ls -d */ | sort
ls -d */ | sort -z
find .
find . -name ".md"
find . -name "*.md"
sudo pacman -S tree
tree -h
tree --hel
tree --help
tree -P "*.md"
ls -la | grep "^d" && ls -la | grep -v "^d"
tree -P "*.md" --dirfirst
tree -P "*.md" --dirsfirst -A
tree -P "*.md" --dirsfirst
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" -not -path "./markdown/homepage.md"
tree -P "*.md" --dirsfirst -f -i
tree ./markdown -P "*.md" --dirsfirst -f -i -F
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v /$
tree ./markdown -P "*.md" --dirsfirst | grep -v '/$'
find --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '\.md$'
grep --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep '\.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i
rm Untitled.html
nvim test.html
sudo pacman -S json-sort-cli
npm i -g json-sort-cli
sudo npm i -g json-sort-cli
sortjson
sortjson -h
sortjson pages.json
echo '{"title": "caca"}' | jq '.folder |= "chimie"'
nvim pages.json
nvim data/pages.json
nvim eventEmitter.js
cd bss
nvim css
mkdir images
unzip 'AppImages (1).zip'
rm -rf images
nvim icons.json
feh android-launchericon-192-192.png
feh 1024.png
feh logo.svg
unzip 'AppImages (2).zip'
nvim ma
unzip 'AppImages (3).zip'
cd android
feh android-launchericon-512-512.png
rm -rf android ios
rm -rf android
rm -rf ios
mv ~/Downloads/ios .
mv ~/Downloads/android .
nvim gen_json.sh
sh gen_json.sh
nvim sy
nvim index
sh data.filter((state) => {\
const regex = new RegExp(searchbar.value, "gi");\
return state.title.match(regex);\

sudo pacman -S pulseaudio
sudo restart
nvim homepage.html
cd index
sh start
mkdir iosatan
cd Excalidraw
feh logo\ \(1\).png
pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator ./markdown/Excalidraw/logo.svg .
sudo pacman -S chrome
sudo pacman -S Chrome
ldd chrome | grep not
chromium
chromium --no-sandbox
$BROWSER=chromium
echo $BROWSER
sh pu
npm install --global pwa-asset-generator
sudo npm install --global pwa-asset-generator
pwa-asset-generator
sudo pacman -S google-chrome
yay -S google-chrome
chrome
google-chrome
pwa-asset-generator ./markdown/Excalidraw/logo.svg .
nvim manifest
rm apple-splash-1125-2436.jpg apple-splash-1136-640.jpg apple-splash-1170-2532.jpg apple-splash-1242-2208.jpg apple-splash-1242-2688.jpg apple-splash-1284-2778.jpg apple-splash-1334-750.jpg apple-splash-1536-2048.jpg apple-splash-1620-2160.jpg apple-splash-1668-2224.jpg apple-splash-1668-2388.jpg apple-splash-1792-828.jpg apple-splash-2048-1536.jpg apple-splash-2048-2732.jpg apple-splash-2160-1620.jpg apple-splash-2208-1242.jpg apple-splash-2224-1668.jpg apple-splash-2388-1668.jpg apple-splash-2436-1125.jpg apple-splash-2532-1170.jpg apple-splash-2688-1242.jpg apple-splash-2732-2048.jpg apple-splash-2778-1284.jpg apple-splash-640-1136.jpg apple-splash-750-1334.jpg apple-splash-828-1792.jpg 
feh manifest-icon-192.maskable.png
rm manifest-icon-192.maskable.png manifest-icon-512.maskable.png
mkdir pwa-images
pwa-asset-generator ./markdown/Excalidraw/logo.svg ./pwa-images -m ./manifest.json -i ./index.html -b "white" -t "png" -h
cd pwa-images
cp ios manifest.json js/serviceWorker.js ~/iosatan
cp ios/ manifest.json js/serviceWorker.js ~/iosatan
cp -r ios/ manifest.json js/serviceWorker.js ~/iosatan
cd ios
cat index.html
nvim manifest.json
cat main.js
cp -r index.html css ~/iosatan
cd mi
nvim test2.md
rm test2.md
cd iosatan
rm -rf iosatan
nvim testObs
cd testObs
rm -rf testObs
rm -rf school
nvim Index1.md
cd vimwiki
nvim links.lua
cd markdown
cd filters
cd markdown/filters
nvim filter.lua
nvim music.js
rm music.js
cd pages
cd chimie
nvim couches\ électroniques.html
cd ..]
cd css
nvim style.css
cd js
npm install youtube-audio-stream
youtube-audio-stream
sudo pacman -S node-ytdl
yay -S node-ytdl
npm install ytdl-core@latest
ytdl-core
ytdl-core@latest
sudo npm -g install ytdl
ytdl
ytdl https://www.youtube.com/watch?v=YltjliK0ZeA&ab_channel=NekfeuVEVO
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA"
rm Nekfeu\ -\ On\ Verra\ \(Clip\ Officiel\).mp4
mpv
alsa-utils
alsamixer --h
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA" | mpv -
ytdl "https://www.youtube.com/watch?v=aiCCsOFSRBU" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audio" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audioonly" | mpv -
live-re
live-s
node
node main.js
mvp video.mp4
mpv video.mp4
rm video.mp4
npm install browrerify
sudo npm install browrerify
sudo npm install browserify
sudo npm install -g browserify
browserify
browserify main.js
browserify main.js > index.js
cat index.js
browserify main.js > yt.js
rm -rf yt
sh start.sh
mkdir ytdl
mv node-ytdl-core-4.11.0.zip ytdl
cd ytdl
unzip node-ytdl-core-4.11.0.zip
cd node-ytdl-core-4.11.0
cd files
nvim tsconfig.json
mv node-ytdl-core-4.11.0 ~/node-ytdl
mv main.js node-ytdl
mv index.html node-ytdl
main.js
cd node-m
cd youtube-audio-stream
cd node-ytdl
rm -rf node-ytdl
nvim package-lock.json
mkdir yt
cd yt
npm i ytdl-core
cd node_modules
cd ytdl-core
nvim index.js
cd y
cd typings
nvim yt.js
curl
curl -vL srntyeia.github.io/okhttp 2>&1 | fgrep -i access-control-allow-origin\

chromium -h
man chromium
chromium --disable-web-security
nvim main.js
rm main.js
rm index.html
cd mirai-wiki.github.io
sh publish.sh
cd srv
sudo pacman -S apache
apache
cd lik
cd lib
cd etc/httpd
nvim indej
sudo nvim index.html
sudo pacman -S apache2
sysytemctl
sudo chmod 755 http -R
chmod 777 index.html
sudo chmod 777 index.html
nvim index.html
sudo chmod 777 http
sudo pacman
sudo pacman -S php
sudo pacman -S libapache
sudo pacman -S libapache2
sudo pacman -S libapache2-mod
sudo pacman -S libapache2-mod-php
sudo pacman -S php-apache
cd /etc/php/
nvim php.ini
cd /etc/httpd
cd conf
cd extra
fzf | nvim
cd etc
cd httpd/conf/extra
nvim php_module.conf
httpd
sudo httpd -h
cd /etc/httpd/conf/extra
sudo nvim php_module.conf
cat php_module.conf
cd etc/php
cd conf.d
mv index.html index.php
cd /etc/httpd/conf
sudo nvim httpd.conf
sudo httpd
nvim httpd.conf
sudo nvim php.ini
httpd -k restart
sudo httpd -k restart
cd /srv
cd http
ping
avahi-browse 
avahi-browse --help
avahi-browse --all
ssh pi@192.168.0.10
ssh pi@192.168.1.10
sudo pacman -S hostname
yay -S hostname
sudo pacman -S inetutils
hostname -I
hostname --help
hostname -i
ping raspberrypi
ping 192.168.1.165
ssh 192.168.1.115
ping raspberrypi.local
cd /home/gregoire/.ssh
php
entr
sudo pacman -S entr
php -v
php -h
php -S localhost:8000 -d error_reporting(E_ALL);
php -S localhost:800
php -S localhost:8000 -r error_reporting(E_ALL);
php -S localhost:8000 -r error_reporting(E_ALL)
php -S localhost:8000 -r "error_reporting(E_ALL)"
mkdir php
mkdir html
nvim header.html
nvim footer.php
mv header.html header.php
cd html
nvim header.php
nvim config.php
php -S localhost:8000
cd usr/share/X11/xkb/symbols
sudo dwarf
cd ]
cd /usr/share/X00/xkb/symbols
cd /usr/share/X11/xkb/symbols
sudo nvim dwarf
ping 192.168.1.115
ping 192.168.1.116
ssh pi@192.168.1.116
nvim functions.php
mkdir data
cd data
nvim views
rm views
sudu pacman -S sqlite
sudg pacman -S sqlite
sudo pacman -S sqlite
sqlite
sqlite3
nvim host
nvim hosts
nvim playbook.yml
nvim sudoers.d
sudo cd sudoers.d
cd sudoers.d
sudo pacman -S ansible
cat main.cpp
cd php
php -S localhost:8000 -e error_reporting=E_ALL
php -S localhost:8000 -r error_reporting=E_ALL
mkdir site-test
cd site-test
php -S localhost:8000 -d error_reporting=E_ALL
mkdir sqlite
nvim db.sqlite
rm db.sqlite
cd sqlite
touch db.sqlite
sqlite3 db.sqlite
nvim packer.nvim
cd xkq
nvmi init.lua
cd pach
cd packq
lsa
ls -li
ls -la
ls -s
cd cache
nvim nvi
cd user
rm -rf lua
nvim rplugin.vim
rm -rf pach
nvim main.shada
cd swap
mkdir lua
mkdir main
nvim test.sh
nvim test.py
sudo pacman -S man
ranger
sls
touch plugins.lua
nvim pl
tyeirn
cd local/share/nvim/site
nvim ini
touch cmp.lua
nvim cmp
nvim lsp.lua
touch lsp.lua
rm lsp.lua
mkdir lsp
nvim lsp
touch init.lua
touch lsp-installer
touch handlers
mv handlers handlers.lua
mv lsp-installer lsp-installer.lua
what_i_got
S
addP
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_R_OPTS="--preview 'tree -C {} | head -200'"
pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S\

dir
cdd
export FZF_ALT_C_OPTS="echo 'caca'"
cd /usr/share/fzf/
source key-bindings.zsh
cd .config/local/share/nvim/site/
cd '\

echo $FZF_COMPLETION_TRIGGER
cd **
cd .fzf
. .zshenv
cd /usr/share/fzf
nvim key-bindings.
rofi
cd .conf
find -L .
find --hidden .
find
fd --hidden
fd --hidden --exclude "Cache"
fd --hidden --exclude "Cache" ".git"
fd --hidden --exclude "Cache" --exclude ".git"
fd --hidden --exclude "cache" --exclude ".git"
fd --include .config
fd --hidden --exclude --follow "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git" --exclude "chromium"
fd --hidden --type d
fd --hidden --type d --exclude "cache"
cd /usr/local/bin
nvim nvim
fd --hidden --type d --exclude "cache" --exclude ".git"
fd --hidden --type d --exclude "cache" --exclude ".git" $HOME
fd --hidden --type d --exclude "cache" --exclude ".git" . $HOME
cd fzf
nvim key-bindings.zsh
/home/gregoire/.dotfiles/nvim/.config/nvim/init.lua 
cd -- /home/gregoire/.config/
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/lsp/
fd --help
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/
cd -- /home/gregoire/.dotfiles/zsh/
lua
luajit
mkdir common
cd common
rm common
rm -rf common
cat init.lua
rm init.lua
ls configs
cd local/share/nvim/site/
rm -rf L3MON4D3 pack 
cd LuaSnip/
rm -rf nvim-cmp
nvim .git
cd nvim/site/
nvim pack
cd pack/packer/start
cd packer.nvim
nviv README.md
cd nvim-cmp
cd L3MON4D3
rm -rf L3MON4D3
cd site/pack/packer/start
cd nvim-lsp-installer
nvim nvim-lsp-installer
nvim nvim-lsp-installer.lua
git clone "https://github.com/wbthomason/packer.nvim/commit/e4c2afb37d31e99b399425e102c58b091fbc16be"
git clone "https://github.com/wbthomason/packer.nvim/"
rm -rf packer.nvim
cd .con
clang
nvim test.lua
mkdir settings
cd main
nvim plugins.lua ls
mv main modules
cd modules
mv modules configs
cat list_plugins.lua
cd packer/start
cd ripgrep
rm -rf ripgrep
rg
cd .config/local/share/nvim/site
nvim main.lua
nvim lsp-installer.lua
mv lsp-installer.lua srv-configs.lua
touch telescope.lua
nim
nvim autopairs
nvim autopairs.lua
nvim tree.lua
nano
vi
nvim packer_compiled.lua
nvim plugin
rm -rf plugin
nvim lua
cd treesitte
nvim treesitter.lua
cd share/nvim/site
rm -rf pack
i
tyisr
tyeisrniysrtuuuuupppyyyeee..
tsryitisryeytsrigo
cd ansible/playbook.yml
tyeisr
cd $(fzf)
cd $(fzf --type d)
fzf -t d
fd --type d
cd $(fd --type d | fzf)
tsr
compinit
tnysre
tysrei
msr
sr
m
ms
echo $(fzf)
man fzf
zle -al
bindkey
bindkey -L
print('')
echo
autoload -Uz promptinit\
promptinit
promptinit
echo $PROMPT
lsl
. ./.zshenv
source .zshenv
nvim $(fzf)
fzf --hidden
nvim .zshrk
export FZF_DEFAULT_OPTS='--bind=ctrl-y:up,ctrl-e:down'
echo $FZF_DEFAULT_OPTS
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:enter'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:confirm'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:return'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:select'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:print-query'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:accept'
echo $EDITOR
cd /usr/lib
rm -rf node_modules
sudo rm -rf node_modules
sudo pacman Syu
fzf --height
fzf --height 40%
nvim .zshenv
cp /usr/share/X11/xkb/symbols/dwarf .
nvim dwarf
git push --force
cndu
ncdu
yeitnsr
ntr
rtn
tr
trntrn
rnt
trn
rntrn
w3m
w3m google.com
rmh
xinif
xinit
iaye
rm .w3m
rm -rf .w3m
nvim .tmux.conf
rm .tmux.conf
tmix
tmux list-keys | grep -t tab
tmux list-keys | grep -i tab
tmux list-keys | grep -i ctrl
tmux list-keys | grep -i control
tmux list-keys | grep -i esc
npm install -g intelephense
npm install -g semver
npm -v
yay -S ttf-comic-mono-git
fzf -h
fc-list | fzf
nvim zshrc
git clone "https://github.com/ryanoasis/nerd-fonts"
yay -S
nvim ComicMonoNerd.ttf
fc-list
mv ComicMonoNerd /usr/share/fonts/TTF/
mv ComicMonoNerd /usr/share/fonts/TTF
mv ComicMonoNerd /usr/share/fonts/TTF/ComicMono.ttf
cd /usr/share/fonts/TTF/ComicMono.ttf
mv ComicMonoNerd.ttf /usr/share/fonts/TTF
sudo mv ComicMonoNerd.ttf /usr/share/fonts/TTF
cd /usr/share/fonts/TTF/
nvim aur
wkhtmltopdf
picom -h
picom -f
cd xo
inxi
compton
pgrep
pgrep compton
pgrep picom
kill 565
picom
feh naruto.jpg
mv ~/Downloads/download.jpeg ./abyss
feh abyss
mv abyss abyss.jpeg
source .xinitrcls
. .xinitrc
feh download.jpeg
1
cd .xinitrc
exif
fd
cd lua/configs/
nivm .xinitrc
e
exit
nvim tmux
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }exit
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }
tmux select-pane -L
echo "caca"
export IS_NOT_FZF=true
echo $IS_NOT_FZF
eaayeitsmpyeiexitts
cd lua/
nvim colorscheme.lua
nviv
yay -S paperview-git
paperview
convert
ls .dotfiles/feh
paperview .
paperview . 20
paperview . 2
git clone "https://github.com/jtsiomb/xlivebg"
cd xlivebg
mv Makefile.in Makefile
unzip xlivebg-1.0.zip
cd xlivebg-1.0
make Makefile.in
rm -rf xlivebg-1.0
rm -rf xlivebg-1.0.zip
rm -rf xlivebg
yay -S xlivebg
cd picom
nvim picom.conf
opacity-rule = [\
    "100:class_g = 'Alacritty'"\

source ./tmux.conf
feh -h
source .xinitrc
t	
nvim keymaps
gcc main.cpp -o test
nvim tmux.conf 
ndim tmux.conf
nvim I
yeitsyye yetsy yetisnvim 
yeisyheyeitytyytiasr
lll
source config
source ./config
nvim colorscheme.lua o
mv chsh.txt ./.dotfiles
ln ./.dotfiles/chsh.txt .
nvim con
ilhhjkj
nnn
eeee
\

t
mkdir yaml
mv dotfiles yaml
cd yaml
mv dotfiles ..
rm -rf yaml
mv dotfiles dotfiles.yml
nvim dotfiles.yml
rm dotfiles.yml
tmuxp load dotfiles
tmuxp load tmuxp.yml 
tmuxp
nvim edit
tmuxp edit
mkdir tmuxp
nvim dotfiles
 ls -lah
 nvim +FZF
 tmux rename-session
echo "Session name: " && read session-name && tmux rename-session $session-name
echo "Session name: " && read session-name && tmux rename-session $(session-name)
echo $session-name
echo "Session name: " && read session_name && tmux rename-session $(session_name)
tmux new -d 'while true; do date; sleep 1; done' \; pipe-pane 'cat > /tmp/log'\

tmux new
tmux new -d
 echo "Session name: " && read session_name && tmux rename-session $session_name
tmux new -d 'echo caca'
tmux new -d "echo caca"
tmux new "echo cici"
 clear && echo "Session name: " && read session_name && tmux rename-session $session_name
exitexit
rustup -v
rustup install
rustup update
rustup self
rustup self update
rustup default 
rustup default -h
mkdir rustLearn
cd rustLearn
rustfmt main.rs
cardo build --release
tmux attach -t dotfiles
read
read | fzf
echo $(read)
echo "$(read)"
print
print $(read)
read -p "rename session: "
read -p "rename session: " $(print)
read -p "rename session: " name && echo $name
read name && echo $name
echo $name
cd .config/tmuxp
tmux attach -t 3
tmux new "echo caca"
tmux new "read caca"
tmux load tmuxp.yml
exut
cd tmuxp
tmux list-sessios
tmuxp load tmuxp.yml
nvim tmuxp.yml
ssh pi@192.168.1.115
setkbmap dwarf
nvim --noplugin
nvim main.cpp --noplugin
tmux a
nvim index.php

yei
oxit
tyeisrn
makE
nvim chsh.txt hugo-like
nvit toggleterm.lua
nvim qey
bucklespring
setxkbmap dwarq
niv
nvim toggleterm.lua
openal
buckle -p
tmux list-sessiors
buckle --help
buckle 
buckle &
git clone https://github.com/tmux-plugins/tpm
nvim tmux t
echo $XDG_CONFIG_HOME | cd
cd $XDG_CONFIG_HOME
mkdir plugins
mv tpm plugins
cd tpm
echo pheww
tyesrniatrns
tyiasr
yteiasrntyneisra
tyiasrne
srntyeia
sudo nvim
psw
chpsw
passwd
echo phewww
git rm --cached tmux/.config/tmux/plugins/tmux-continuum
git -f rm --cached tmux/.config/tmux/plugins/tmux-continuum
git rm -f --cached tmux/.config/tmux/plugins/tmux-continuum
nivm
cd /usr/bin
./g++
cd lua/configs/lsp
mkdir lib
mkdir include
unzip AlsikeLab.zip
nvim Mabe
mkdir game game/src engine engine/include engine/src engine/external
git clone https://github.com/glfw/glfw
ls 
mkdir Engine
mv engine Engine
mv game Game
mv Game game
mv Engine engine
mv game myGame
cd ..ls
cmake -v
sudo pacman -S cmake
cmake --version
cmake .
rm CMakeCache.txt cmake_install.cmake Makefile
mkdir
mkdir game
tree .
unzip glad
cd glad.zip
unzip glad.zip
mkdir ~/dev/myGame/engine/external/glad/
mv * ~/dev/myGame/engine/external/glad/
mv glad.c ~/dev/myGame/engine/src/
mv glad\ \(1\).zip ~/dev/myGame/engine/external/glad
cmake clean
cmake --help
rm -rf *
rm -rf game
rm -rf engine
git remote add myGame
git branch main
git push myGame
git push --set-upstream myGame master
cat compile_commands.json
rm -rf .git
rm -rf glfw
cd engine/external
git submodule add https://github.com/glfw/glfw .
git submodule add https://github.com/glfw/glfw ./glfw
git commit -m "Initial commit"
git remote add origin https://github.com/Ggcpp/myGame.git
git push -u origin "master"
cd gl
mv * ..
mv glad ../gladd
mv gladd glad
mv external/glad include
mv external/KHR include
rm -rf glad
rm -rf KHR
mkdir glad
unzip glad\ \(1\).zip
rm -rf glad\ \(1\).zip
cd GLFW
mkdin build
make Glad
make Engine
mabe glfw
make glfw
make Game
cd Game.dir
git commit -m "Add Glad"
rm glad.c
git commit
git commit -m "remove wrong glad file"
cd AlsikeStudio
nvim AlsikeStudioApp.cpp
nvim Application
cd ApplicationCreateInfo.l
nvim ApplicationCreateInfo.h
cd Win32
nvim WindowWin32.cpp
ln build/debug/compile_commands.json .
ln build/debug/compile_commands.json . --force
lfs
nvim AlsikeMain.cpp
cd Game
cmake tnrss
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
make release
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=release ..
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=debug ..
make debug
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG
cmake -S . -B build/release -DCMAKE_BUILD_TYPE=RELEASE
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1
sudo make run
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json .
git commit -m "Open a window"
cd engine/src
mkdir shaders
git commit -m "First triangle"
git commit -m "First rectangle"
git commit -m "Shaders"
sudo poweroff
./GAME
mv game/images engine
cd engine\\

mv engine/src/images game/src/
mv images ../../build/debug/game
feh opt/discord/discord.png
rm -rf tmux-continuum
git submodule https://github.com/tmux-plugins/tmux-continuum .
git submodule add https://github.com/tmux-plugins/tmux-continuum .
cd tmux/plugins
git submodule add https://github.com/tmux-plugins/tmux-continuum
cat sortie.txt
mike
fzf 
mv build/debug/engine/images game/src
feh images
nvim images
c d..
cd debud
cd agme
cd im
type
type images
tsrtS
mv src/images .
touch file.txt
cd images/
cd game/images
\n
cat file.txt
cd n
std::ofstream fichier { "sortie.txt" };\
    // On écrit un 3, un espace et un 4.\

feh game/images/image.png
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);	\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);\

git commit -m "Texture rendering"
make Release
ccmake
ccmake .
cmake ..
git submodule add https://github.com/g-truc/glm
cd engine/external/glfw
cd glm
maker un
cd AlsikeLab
nvim Engine
nvim Engine.h
nvim Application.h
git commit -m "Coordinate systems"
rm CMakeCache.txt
rm .rf .cmake
rm -rf .cmake
rm -rf .cache
git commit -m "remove mistakes cmake stuff"\

git push 
cd glad
cd glad.dir
git submodule add https://github.com/gabime/spdlog .
git submodule add https://github.com/gabime/spdlog ./spdlog
cd spdlog
git commit -m "log system"
mv Engine.h Core
mkdir Core
mv Engine.cpp Core
rm -rf shaders
mkdir stb_image
cd stb_image
mv ../../src/stb_image.* .
nvim stb_image.cpp
mv game/src/main.cpp engine/src
git commit -m "new architecture"
rm compile_commands.json
cd src/Core
rm Log.cpp
sudo pacman -S
pavucontrol
git commit -m "set startup project for VS"
mkdir Window
cd engine/include/Engine/Window
mv ApplicationCreateInfo.h ../Core
cd engine/include
rm -rf Window
mkdir Win32
mkdir OSX
cd engine/src/Window
touch WindowX11.h
touch WindowX11.cpp
git commit -m "Window abstraction"
mv WindowWin32 Win32
mv WindowWin32.h Win32
git commit -m "Add WindowWin32"
mkdir Event
git commit -m "Basic event system"
hs
git commit -m "Add and define Win32 window"
ln compile_commands.json ../..
ln compile_commands.json ../.. --force
clean
make update_mappings
rm sortie.txt
mkdir pipi
mkdir caca
cd pipi
cd caca
touch prout.cpp
cp caca/* pipi/
g++ main.cpp caca/*.cpp -o test
g++ main.cpp pipi/*.cpp -o test
g++ main.cpp pipi/*.cpp caca/*.cpp -o test
makEst
make compile_commands.json
mkdir Renderer
mv Renderer Graphics
mkdir OpenGL
cd src/Graphics/OpenGL
mv Shader.* OpenGLShader.*
mv Shader.h OpenGLShader.h
mv Shader.cpp OpenGLShader.cpp
git commit -m "Shader class + some refactoring"
git commit -m "#ifdef platform specific (remove from cmake)"
git commit -m "interface GraphicsContext + graphics api preprocessor"
cd .config/nvim/lua/
cd configs/l
cd configs/
cd .config/nvim/lua/configs/lsp
clang-format
clang-format --help
clang-format -style=llvm -dump-config > clang-format\

nvim clang-format
clangd
touch config.yaml
mv .clang-format clang-format
rm clang-format
mv config.yaml clang-format.yaml
nvim clang-format.yaml
mv clang-format.yaml config.yaml
nvim config.yaml
mkdir clangd
stow clangd
rm .clang-format
mv .clang-format caca
nvim caca
rm caca
tmux kill-session 0
tmux kill-session -c 0
tmux kill-session -t 0
cd .config/tmux
a
tmux rename-window
nvim test
nviq
nvim statusline.lua 
tmux set -g
tmux set -g status-left "caca"
clangd --help-list
clangd --help-list-hidden
echo $XDG_CONFIG_HOME
clangd --help
clangd -style
clangd --style
cd li
nvim l
cd nvim/lua/configs
nvim options.lua
cd dev/myGame
rm -rf CMake
rm -rf CMakeFiles
tmux list-sesssions
neofetch --ascii_distro windows
tmub
tmux l
tmux l-s
echo $TMUX
cd .config/nvim/
cd lua/configs
yay -S whatsapp-for-linux
yay -S whatscli
whatscli
dmesg | grep -i wacom
sudo dmesg | grep -i wacom
xsetwacom 
setxkbmap
cd do
spotify-launcher
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
nvim statusline.lua
cd .pk
poweroff
anty
anthy-agent
glob
blob
mkdir Vulkan
cp OpenGL/Buffer.* Vulkan
cd Vulkan
rm Buffer.h
mkdir del
mv *.h del
mv Graphics.h ..
cd OpenGL
mv *.h ..
git commit -m "Buffers"
tmuk
make re
mv *.h OpenGL
mv OpenGL/Graphics.h .
mv del/* .
cd del
rm -rf del
clang-refactor
cd nvim/lua
cd configs/lsp
cd Graphics
mv OpenGL/Renderer.h ../../include/Engine/Graphics
cd include/Engine/
mv Graphics Renderer.h
mkdir Graphics
mv Renderer.h Graphics
mak
git commit -m "Vertex array + renderer fundations"
dap
clang++
clang++ --version
cd Downloads/AlsikeLab
cd Alsike
cd Utility
cat Vector2.h
nvim Vector2.h
mv Core/Vector.h ../include/Engine/Core
git commit -m "Vertex Buffer Layout"
cd in
cd Engine/Core
mv OrthographicCamera.h ../../../src/Graphics/
git commit -m "Camera"
feh animation_1.gif
mv animation_1.png ~/dev/myGame/game/images
cd include/Engine/Graphics
mv Texture.h ../../../src/Graphics/OpenGL/
git commit -m "Texture"
git pushe
game/Game
git commit -m "Content Manager"
git commit -m "Blending"
unzip WhatsApp\ Chat\ -\ +41\ 79\ 364\ 75\ 90.zip
maek
git commit -m "Keyboard Events"
maek run
n
mv src/Graphics/Camera.h include/Engine/Graphics/Camera.h
mv src/Graphics/OpenGL/OpenGLShader.h include/Engine/Graphics/Shader.h
mv include/Engine/Graphics/Shader.h src/Graphics/
git commit -m "Renderer update"
git commit -m "Refactoring"
git commit -m "Move to GameApp (client side)"
cd Window
mv KeyCodeX11.h ../../Input
cd ../../Input
mkdir X11
mv KeyCodeX11.h X11
cd include
cd Engine
mkdir Input
cd Event
mv Input.hpp KeyCode.hpp ../Input
git commit -m "Keyboard state querying"
cd ../release && make && make run && cd -
cd ../../game/images
feh awesomeface.png
feh animation_1.png
git commit -m "Fully working Renderer + other improvements"
rm -rf build
ug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\

git commit -m "Cleaning all warnings"
git commit -m "Optimizing Renderer view matrix compute"
cd build/
git commit -m "Draw texture rotation and scale"
git commit -m "add color transform"
git commit -m "Tiling factor"
unzip OffTheBalls.zip
cd OffTheBalls_Data
sudo!
sudo sudo!
./OffTheBalls.x86_64
OffTheBalls
sudo ./OffTheBalls.x86_64
rm -rf OffTheBalls_Data
rm OffTheBalls.x86
rm OffTheBalls.x86_64
rm -rf OffTheBalls.zip
mkdir Debug
git commit -m "Profile core functions"
maki
nvim load.json
nvim runtime.json
rm runtime.json
rm load.json
git commit -m "Benchmarking system"
nvim EngineProfile-Runtime.json
git commit -m "improve profiling"
rm EngineProfile-Runtime.json
make `-DCMAKE_CXX_FLAGS:="-DENGINE_PROFILE=1"`
make -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1
make -E -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1
make -E "-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1"
make "-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1"
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1" `
make ` -DCMAKE_CXX_FLAGS:="-DENGINE_PROFILE=1" `
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1 `
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1`
make `-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1`
make `-DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'`
make -DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'
make DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'
cd dev/myGame/build/debug/game/
mv EngineProfile-Runtime.json EngineProfile-Runtime-Batch.json
make -DNDEBUG
make CXX_FLAGS=-DNDEBUG
make CXX_FLAGS=-D ENGINE_PROFILE
make CXX_FLAGS=-ENGINE_PROFILE
make CXX_FLAGS=
rm -rf build/debug
make CXX_FLAGS+=-DENGINE_PROFILE=1
make CXX_FLAGS=-DENGINE_PROFILE=1
make CXX_FLAGS=-DENGINE_PROFILE
make CFLAGS=-DENGINE_PROFILE
make CFLAGS=-DENGINE_PROFILE=1
cd CMakeFiles
cd Engine.dir
nvim flags.make
rm -rf debug
make CXX_FLAGS=-DENGINE_VULKAN\

make rebuild_cache
git commit -m "Preprocessor instructions fixed"
git commit -m "First implementation batch rendering"
git commit -m "some refactor batch rendering + singleton Application"
emake
touch launch.sh
chmod +x launch.sh
cd ../i3
fg
bp
bg
./launch.sh
mdp
nvim launch.sh
sudo
sudo ./launch.sh
sudo polybar
ejit
killall -q polybar
cd .config/polybar
cd .configls
cd build/debug
cd pol
setxbkmap dwarf
ninja
cd go
cd pkg
cd mod
nvim chsh.txt
git clone --recursive
git clone --recursive https://github.com/aseprite/aseprite
cd aseprite
mkdir build
cmake .. -DCMAKE_BUILD_TYPE=RELEASE
cmake .. -DCMAKE_BUILD_TYPE=Release
make 
./aseprite
skia
git clone --recursive https://github.com/aseprite/skia
cd skia
yay --version
rm -rf skia
wa
cd /etc
cd /usr/share
cd X11
cd xkb
cd symbols
ln ~/.dotfiles/dwarf .
sudo ln ~/.dotfiles/dwarf .
sudo ln . ~/.dotfiles/dwarf
sudo cp ~/.dotfiles/dwarf .
git clone "https://github.com/ggcpp/mygame"
tmuj
git clone --recursive "https://github.com/ggcpp/mygame"
mabe
cmake -S . -B build/release -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
nvim GameApp.cpp
yay -S anki
rm main.cpp main
cd /
cd /usr
fzf .
mkdir fonts
sudo mkdir fonts
cd fonts/ttf
rm -rf ttf
sudo rm -rf ttf
cd fonts
sudo mkdir ttf
cd ttf
cp ~/.dotfiles/ComicMonoNerd.ttf .
sudo cp ~/.dotfiles/ComicMonoNerd.ttf .
cd .config/alacritty
sudo pacman -S mpv
cd my
addition
./addition 1
./addition 1 2
make clean
sudo pacman -S htop
fan
redshift -O 3000
nvim /etc/default/grub
sudo nvim /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
sudo grub-mkconfig -o /boot/grub/grub.cfg
mv ~/Downloads/3692499.jpg .
mv 3692499.jpg main.jpg
cpulimit
yay -S w3m-img
yay -S w3m
                       .=====__\
                   /==Z' .===_ ~~=,_===\\
                 _/  |   |    YZ, `\,   ~\\
                 |   |   | _/=j'\     d\
          __====_|   |   b/    V`;  /'  .M ,\
  `5\==/~~       W,  t   d+,  .D4| /   /'|/~~~\=__     .-\
   `\            t~\ |   |t`~~T/'|Z  :/  |        ~~\=/V\
     \           |  \4,  | ~/~' :Z  -!   |             |\
      \,      /\__|   \\.!     :XG   \   / ._,       ./'\
       `L    |    ~;    V;  _//' |    \ .f~' `~;    .b_\
      ./ \\__JL    `;    Y7~     |    / /     d   //'  \,\
     .!       `D\,  `\,   |     .!   .t/    .(_/=~      \\
     /         `;`~~~=+=qLb,   jK_L==f'    j''          `;\
   ./          .(r,        `~\5'   ~\\,._r/              |\
~=m!         ./D' `\,          \,     !G~                 t\
   ~==___===/'/   .!`\__       /! __=~\\~=_                TG=\
             |   .|     ~\=\=r@/~5 \   !,  ~=_,        __//'\
             |./~V           ||  `| \,  t     ~~~~\==~~\
             t|  |           | |  |  !\, \=_,\
             !   t          .! !, \    `\/~~~\
                 |          /   !\/\\
                 `;       ./      `~-\
                  t      .!\
                   N,  ./'\
                    `\/'
neofetch --ascii ./rose
nvim rose
nvim rose_ascii
neofetch --ascii ./rose_ascii
mv rose_ascii book_ascii
cd .confgit
nvim book_ascii
yeitsr
neofetch --help
neofetch --ascii_distro windows10
neofetch --ascii_distro windows7
tsyrie
cd .configt
cd neofetch
nvim config.conf
neofetch
sudo fancontrol
fancontrol --help
pulse
cd plugins
d
g++ main.cpp -o greeting
./greeting
g++ main.cpp -o addition
cd .config/tmux/plugins
rm -rf tpm
tmux attach
y
makke
tmux list-sessions
redshift -O 2500
cd polybar
nvim confid
nvim cofig
polybar
./addition
cd build/release
salut les amis comment allez-vous en ce beau jour d'automne hein ? La mer est salée chez nous n'est-ce pas bande de cachalot des marées infinie
aseprite
yay -S aseprite
sudo start NetworkManager
systemctl list-jobs
systemctl
ping google
ping google.com
sudo chmod 600 /etc/NetworkManager/system-connections
wicd
iwlist
cd /etc/NetworkManager
nvim NetworkManager.conf
sudo cd system-connections
nvim system-connections
chmod 777 system-connections
sudo chmod 777 system-connections
cd system-connections
cd /etc/NetworkManager/system-connections
sudo chmod 777 *
iwconfig
sudo systemctl enable NetworkManager
sudo systemctl start NetworkManager
sudo systemctl restart NetworkManager
nmcli dev wifi list
nmcli dev wifi con nmv-05051 password jsrj-z21g-hgqb-zsrh
nmcli radio wifi on
nmcli device wifi rescan
nmcli device wifi list
systemctl status
sudo nmtui
cd mygame
redshift --help
redshift -h
systemctl restart NEtworkManager
systemctl restart NetworkManager
systemctl enable NetworkManager
redshift -x
yay -S spotify-tui
cd spotify-tui
nvim client.yml
spi\

cd .confid
alsy
sudo pacman -R alsa-lib alsa-utils
cd .cache
cd .config/spotifyd
cd cache_directory/
nvim .config/spotifyd.sp
nvim .config/spotifyd/spotifyd.conf
spotifyd --help
spotifyd --verbose
spotifyd --verbose --debug-credentials
dbus-run-session
aplay -L
sudo spotifyd --no-daemon
pst
pcm
aplay -l
stp
systemctl --user status spotifyd
systemctl --user status pulseaudio
systemctl --user status pulseaudio.socket
spotifyd --no-daemon --verbose
cd cache_directory
rm -rf cache_directory
cd .yarn
cd bin
rm -rf yarn
pulsemixer
g++ main.cpp -o rpg
pulseaudio
pulseaudio --hel
pulseaudio start
pulseaudio --start
lls
cd pulse
cd /etc/pulse/client
nvim f1bf6dde49aa4ba48aac5c8a357048cc-default-source
nvim client.conf
nvim /etc/pulse/default.pa
nvim /etc/pulse/client.conf
cd ../spotifyd
yarn
npm install -g yarn
sudo npm install -g yarn
cd nmig
cd /usr/local/share/nvim
cd runtime
cd keymap
cp ~/keymap-fr.vim .
nvim accents.vim
nvim arabic_utf-8.vim
sudo cp ~/keymap-fr.vim .
cd .config/nvim/lua.configs
nvim telescope.lua
rpm
np
npm
npm install -g live-server
sudo npm install -g live-server
sudo npm remove live-server
sudo npm remove -g live-server
live-server
cd .locaf
git clone https://github.com/iamcco/markdown-preview.nvim.git\

cd markdown-preview.nvim/
cd local
cd site
cd pack
cd packer
cd start
cd opt
cd markdown-preview.nvim
yarn install
yarn build
nvim keymap-fr.vim
nvim test.cp
ssh
ls -al ~/.ssh
cd .ssh
nvim known_hosts
ssh-keygen -t ed25519 -C "gg.geinoz@outlook.com"
eval "$(ssh-agent -s)"
ssh-add id_ed25519
cat it
cat id_ed25519.pub
mkdir 4GY6/histoire
mkdir 4GY6
mkdir histoire
cd histoire
nvim update.sh
sh update.sh
nvim ssh.sh
ln keymap-fr.vim ./.dotfiles
git commit -m "add nvim keymap"
nvim test.cpp
mkdir school
git init
git add README.md
git config --global user.email "gg.geinoz@outlook.com"
git config --global user.name "Ggcpp"
git commit -m "initial commit"
git remote add origin git@github.com:Ggcpp/school.git
git push -u origin
git push -u origin main
git push -u origin master
sudo git push -u origin master
cat spotifyd.conf
killall spotifyd
cd .doi
nvim caca.
nvim caca.md
rm caca.md
nvim caca.txt
rm caca.txt
mkdir spotifyd
sh spotify.sh
git commit -m "spotifyd"
spotify
cd pkglist/
rm addition
rm greeting
nvim package.json
rm package.json
rm package-lock.json
cd rpg
./rpg
rm rpg
rm test.md
rm keymap-fr.vim
mkdir dev
rm -rf mygame
cleas
nvim game
git clone --recursive "git@github.com:Ggcpp/myGame.git"
cat README.md
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
spotifyd --no-deamon
cat pacman
chsh -s /bin/zsh
sudo chsh gregoire /bin/zsh
sudo chsh /bin/zsh gregoire
sudo --shell /bin/zsh gregoire
chsh --help
chsh -l
sudo chsh /bin/zsh
sudo chsh -s /bin/zsh
sudo chsh gregoire -s /bin/zsh
sudo chsh gregoire -s /bin/bash
ansible
tee
ansible all --list-hosts
mkdir carnival
mkdir ansible
touch playbook.yaml
ansible-playbook --help
ansible-playbook playbook.yaml
mv packages.txt packages.txtt
cd /root
sudo cd /root
ls /root
sudo ls /root
sudo ls -a /root
chsh -s /bin/bash
for folder in ~/.dotfiles/*/ do stow $folder done\
\
\

for
for folder in ~/.dotfiles/*/\
do\
stow $folder\
done
nvim playbook.yaml
ansible-playbook --ask-become-pass playbook.yaml
cat playbook.yaml
echo $USER
stow --help
cd spotify
cd spotifyd
nvim spotifyd.conf
nvim spotify.sh
touch setup-playbook.yaml
nvim ansible-setup.sh
nvim setup-playbook.yaml
nvim a
cat pkglist/.pkglist/pacman
nvim packages.txt
sh ansible-setup.sh
git commit "add ansible"
git commit -m "add ansible"
echo $[$RANDOM %40]
echo $[$RANDOM % 1]
echo $[$RANDOM % 2]
echo $[$RANDOM % 10 + 1]
feh 901676.webp
mv 901676.webp baw.webp
feh sakura.jpg
rm sakura.jpg
feh baw.webp
mv ezgif.com-gif-maker.jpg wpp2.jpg
feh shenron.jpg
feh snow.jpg
mv shenron.jpg wpp3.jpg
mv snow.jpg wpp4.jpg
mv wpp2.jpg wpp3.jpg wpp4.jpg ~/.config/wallpapers/
cd .dotfiles/
fzf
feh main.jpg
mv main.jpg wpp1.jpg
feh abyss.jpeg
rm abyss.jpeg
feh abyss.png
rm abyss.png
lss
feh gruvbox-wallpaper.png
rm gruvbox-wallpaper.png
rm naruto.jpg
feh ocean.png
feh rainy1.jpg
rm rainy1.jpg
feh wallpaper1.webp
rm wallpaper1.webp
feh zelda.png
rm zelda.png
feh zelda.png.png
rm zelda.png.png
echo $[ $RANDOM % 4 + 1 ]
cd feh
cd wallpapers
mv wpp3.jpg wpp5.webp wpp6.jpg wpp7.jpg ~/.config/wallpapers
cd ~/.config/wallpapers
mv wpp5 ~
mv wpp5 ~/
mv wpp5.webp ~/
mv ezgif.com-gif-maker.jpg wpp5.jpg
mv wpp5.jpg ~/.config/wallpapers
rm wpp5.webp
feh wpp7.jpg
feh wpp2.jpg
feh wpp3.jpg
feh wpp4.jpg
feh wpp5.jpg
feh wpp6.jpg
rm wpp3.jpg
rm wpp5.jpg
mv wpp6.jpg wpp3.jpg
mv wpp7.jpg wpp5.jpg
feh feh_014937_000001_wpp1.jpg
feh wpp
feh wpp1.jpg
rm feh_014937_000001_wpp1.jpg
cd shool
mkdir francais
nvim atelier-ecriture
spotifyd --no-daemon
spt
nvim duras.md
cd external
cd glfw
cd images
feh image.png
feh container.jpg
feh file.txt
nvim file.txt
cd dev/myGame/build/debug
git clone git@github.com:Ggcpp/Japanese.git
calc
open
./Stats.ods
nvim Stats.ods
nvim .\~lock.Stats.ods\#
libreoffice Stats.ods
rm .\~lock.Stats.ods\#
git commit -m "Test from linux"
git pull
sudo shutdown now
cd school/4GY6/histoire
cd /usr/luc
cd /usr/local/share/nvim/runtime/keymap
cd shada
cd luals
nvim course.md
int main(s)
int main()\
return 0;
nvim main.go
alsa
go
muumh
td
zgou./srrnttttttrrrrrrrrllrff
google
open google
l = 2
shutdown not
\:q1
\:qw
\:w
\:wq
\:q
\:q!
------___--_-_-__-___-___--=++==++=+
s jfkasldjfklas
fjklasfjklas
jflkasdfj ijgi asjgi 
cd .ansible
cd tmp
ls 4GY6
cd 4GY6
cd francais
nvim poeme.txt
nvim histoire
\:qa
./GAme
nvim .bashrc
rmp
su
hto
fsljakfsdjlkjljsda
jflsajfkl 
fjkalsfjkaljfklajflkajlkfjalkjfajklifeajklfajklijfkasllljfjjla
nvim engine
jklfdsjkflas
gjkalsglsa
fjaslflas
gsdjgskadlgsad
sudo shutdown
ur
spotifyd
htop
sensors-detect
sudosensors-detect
sudo sensors-detect
fancontrol
sensors
pwmconfig
sudo pwmconfig
i7z
turbostat
cpupower
nvim start.sh
logout
nvim .config/i3/config
nvim .config/i3/start.sh
nvim .xprofile
./tesst
rm test main.cpp
cd .mozilla
cd 
rm -rf .mozilla
cd clangd
nvim .clang-format
ls [a
nvim compile_commands.json
nvim CMakeLists.txt
nvim .gitmodules
nvim README.md
nvim ~/.xinitrc
feh rainy2.jpg
cd .config/wallpapers
zsh
hello guys
make help
make install
sudo Game
sudo make install
sudo make uninstall
rm /usr/local/lib/libglfw3.a
sudo rm /usr/local/lib/libglfw3.a
sudo rm /usr/local/lib/cmake
sudo rm -rf /usr/local/lib/cmake
cmake
sudo rm -rf /usr/local/lib/pkgconfig/
sudo rm -rf /usr/local/include/
Game
make run
rm 2023-02-23-115821_565x490_scrot.png
\
scrot -e 'xclip -selection clipboard -t image/png -i $f'
\
scrot --select -e 'xclip -selection clipboard -t image/png -i $f'
rm 2023-02-23-115952_1920x1080_scrot.png 2023-02-23-120014_549x542_scrot.png
rm 2023-02-23-120105_324x353_scrot.png
scrot
feh 2023-02-23-114700_1920x1080_scrot.png
rm 2023-02-23-114700_1920x1080_scrot.png
scrot --select
feh 2023-02-23-114828_757x376_scrot.png
rm 20i
rm 2023-02-23-114828_757x376_scrot.png
xclip
mkdir sxhkd
nvim install.sh
cd sxhkd/.config/sxhkd
scrot screenshots/one.png
scrot --help
scrot screenshots/one.png --force
scrot -h
notify-send "fsdjl"
cd -
cd pkglist
cd .pkglist
nvim pacman
mkdir scripts
nvin screenshot.sh
rm 2023-02-23-130936_303x276_scrot.png
rm 2023-02-23-131240_634x1054_scrot.png
rm 2023-02-23-131200_409x583_scrot.png
mkdir ~/Screenshots
rm 2023-02-23-131357_339x21_scrot.png
rm 2023-02-23-131422_342x400_scrot.png
scrot ~/Screenshots
scrot ~/Screenshots/caca.png
sh ./screenshot.sh
nvim screenshot.sh
mkdir .config
mkdir .config/scripts
mv screenshot.sh .config/scripts
cd .config/scripts
stow scripts
stow sxhkd
cd scripts
sc
rm 2023-02-23-120155_135x77_scrot.png
rm Screenshots
rm Screenshots_000
rm -rf Screenshots
feh screenshot.png
cd i3/.config/i3
cd .
cd .config/i3
cd .dotfiles
cd ../../..
cd xorg
nvim .xinitrc
git add -A
git commit -m "update"
git push
ls /sys/class/backlight
cd /sys/class/backlight
cd amdgpu_bl0
uim
setxkbmap uim
nvim test.md
jfsadkl
gsak;
fjklads
rebecca
exiy
YyY
.....................
.......................................
...........................................................
...............................................................................
...................................................................................................
.......................................................................................................................
...........................................................................................................................................
.
....................clear
..
...
.......................
...........................................
...............................................................
...................................................................................
.......................................................................................................
...........................................................................................................................
...............................................................................................................................................
...................................................................................................................................................................
.......................................................................................................................................................................................
...........
...............................
...................................................
.......................................................................
...........................................................................................
...............................................................................................................
yay -S minecraft
setxkbmap ch
cd zsh
nvim .zshrc
setxkbmap jp
sudo nvim brightness
sudo echo 40 > brightness
sudo sudo echo 40 > brightness
ls -n
chmod a=w brightness
sudo chmod a=w brightness
sudo chmod a=rw brightness
ls -l
echo 40 > brightness
awk
xeb
cd .confi
cd /sys/class/backlight/amdgpu_bl0
nvim brightness
\
R\
R\

xev
echo 4 
cd /sys/class/backlight/amdgpu_bl0/
echo 5 > /sys/class/backlight/amdgpu_b10/brightness
echo 5 > brightness
echo 10 > brightness
echo 10 > ./brightness
../amdgpu_b10/brightness
../amdgpu_bl0/brightness
bc
cd .config/sxhkd
cat text.md
cat text.md || echo salut.txt
cat text.md || echo > salut.txt
echo prout > salut.txt
rm salut.txt
rfgyvyhyhuyu
t6g
fsajkfaklsfj
cd myGame
cd engine
cd Core
nvim Application.cpp
cd game
./Game
ch
en
sudo update
shutdonw now
sudo pacman -S archlinux-keyring
cd .cargo
cd registry
falsj
cls
update
sudo reboot
cd nvi
nvim handlers.lua
nvim signature.lua
cd settings
nvim clangd.lua
nvim plugins.lua
nvim init.lua
nvim list_plugins.lua
cd lsp
nvim srv-configs.lua
add
cd de
mkdir rust_learning
rustc main.rs
nvim rust
struct
rust-analyser
rust-analyzer
mkdir ch1
rustfmt
rustc main.rs -o test
cargo --version
rustc --version
rm *
rm -rf ch1
cargo new ch1
cd ch1
nvim .gitignore
cd .git
cd info
nvim exclude
nvim Cargo.lock
nvim .rustc_info.json
nvim CACHEDIR.TAG
cd examples
cd deps
cd..
l
cd buil
cd build
./ch1
cargo new ch2
sl
cargo fix --bin "ch2"
nvim main
cd doc
cargo fun
cargo doc --open

cargo new test
cargo new testo
g++ main.cpp -o main
./main
rm main
nvim cm
JJ
	
cd .configs/nvim/lua/configs
cd .configs/nvim/
cd .config/nvim/lua/configs
yay
cd chw
ch2
cd ch2
cargo new ch3
s
cd ../src
cargo check
nvim main.rs 
rm -rf ch3
cargo new ch4
cd ../../testo
size
nvim main.c
gcc main.c -o test
size test
rm test
rm main.c
nvim rust.txt
restart
cd dev/rust_learning/ch4
cd srac
cargo ru
cd release
nvim testo
./testo
rm -rf release
cd sr
cd ../../test/src
cd ../../testo/src
cd ch3
cargo build
cd ../target
cd debug
cargo build --release
cd ../release
nvim ch4
cd ../../src
cd testo
cd ch4
reboot
cargo new ch5
cd ch5
cd ../target/debug
nvim ch5
cargo run --release
yay -Syu
yay -S airshipper
tree
airshipper
Veloren
veloren
rust
rustc
rustup
rustup default stable
cargo
yay -S veloren-bin
yay -Rf veloren
yay -Ryu veloren
yay -Ru veloren
yay -S veloren
cd .local
cd share
cd state
cd nvim
nvim lsp.log 
cd rust_learning
cargo new ch6
vim main.rs
nvimm main.rs
cargo new ch7
cd target
nvim Cargo.toml
cd ch7
cd ch6
cargo new restaurant --lib
cd restaurant
,s
nvim lib.rs
rm  -rf restaurant
cargo new ch8
set xkbmap dwarf
setxkbmap dwarf
showkey
ls -a
la
cd sxhkd
nvim sxhkdrc
cd i3
nvim config
cd alacritty
nvim alacritty.yml
nvi cmp.lua
nvim cmp.lua
cd .configs
cd .config
cd tmux
nvim tmux.conf
cd testo/src
tmux server-info
nvim  _chat.txt
rm _chat
rm _chat.txt
;
showkey -a
nvim .config/tmux/tmux.conf
nvim .config/alacritty/alacritty.yml
cd dev/rust_learning
cd ch8
nvim src/main.rs
cd dev/rust_learning/ch8/src
cargo run
nvim main.rs
mkdir minimax
g++ main.cpp -o minimax
nvim m
rm mini
rm minimax
g++ main.cpp -o oc
/.oc
./oc
alsamixer
g++ -std=c++17 src/*.cpp -Iinclude -lSDL2main -lSDL2 -lSDL2_image
mkdir src
mv main.cpp src/
rm oc
mv OneDrive_1_5-3-2023.zip ../dev/minimax/src
cd ../dev/minimax/src
rm main.cpp
unzip OneDrive_1_5-3-2023.zip
rm OneDrive_1_5-3-2023.zip
g++ -std=c++17 src/*.cpp -lSDL2main -lSDL2 -lSDL2_image
mkdir assets
mkdir assets/images
mv ~/Downloads/test.png ./assets/images
./a.out
g++ -std=c++17 src/*.cpp -lSDL2main -lSDL2 -lSDL2_image -o minimax
rm a.out
cd .config/nvim
cd plugin
cd lua
cd configs
nvim keymaps.lua
mv pixil-frame-0.png pixil-frame-0\ \(1\).png ~/dev/minimax/assets/images
cd ~/dev/minimax/assets/images
rn
feh pixil-frame-0\ \(1\).png
mv pixil-frame-0\ \(1\).png circle.png
mv pixil-frame-0.png cross.png
nvim 
quit
exi
ake
xkill "minimax"
xor
xorg-xkill
addp
mpeg
mw
ps
nvim Game.cpp
nvim /src
cd dev/minimax/src
cd ../..
cp minimax connect-4
cp -r minimax connect-4
f
cd ../connect-4
xkill
tmux kill-server
top
nvim Makefile
mv ~Do
mv ~/Downloads/pixil-frame-0 assets/images/circle.png
mv ~/Downloads/pixil-frame-0.png assets/images/circle.png
mv ~/Downloads/pixil-frame-0\ \(1\).png assets/images/cross.png
cd dev/
cd minimax
cleaf
cd serc
nvim Minimax.h
cd dev/minimax
nmtui
cd Downloads
rm minima.png
feh minimax_tree.png
cd ..
nvimm sr
./mi
cd dev/connect-4/
./m
jkdl
cailloux
pierre
tmux attach-session
tmux attach-session\
mexit
hyk,
mkdir test
cd test
g++ main.cpp -o test
./test
nvim main.cpp
cleaa
nvi
mkdir rebecca
vmin
nvim rebecca.cpp
feh *
feh screenshot_000.png
nvim mail
rm mail
nvim ntw
nvim text.md
nvim todo
cd carnival
cd ansible
cd Japanese
cd school
cs
cd rebecc
cd rebecca
g++ rebecca.cpp -o Tiplouf
sudo pacman -Syu
shutdown
shutdown -c
cd dev
cd connect-4
cd Screenshots
feh screenshot_013.png
feh screenshot_014.png
cd
cd src
nvim Minimax.cpp
shutdown now
nvim .
nvim
tmux
mv minimax mmi
ls
./mmi
fr
clear
us
./minimax
nvim src/Minimax.h
make
slock
cd dev/connect-4
nvim src
exit
us
./minimax
cargo run
cargo make
cd dev/conn
cd
cd dev/connect-4
clear
shutdown now
fr
nvim
us
cd dev/
cd connect-4
cd assets/images
rm test.png
mv ~/Downloads/pixil-frame-0.png circle.png
mv ~/Downloads/pixil-frame-0\ \(1\).png cross.png
mv ~/Downloads/pixil-frame-0\ \(2\).png empty.png
ls
cd dev/connect-4
nvim .src
cd src
nvim .
make
./minimax
/mmi
./mmi
rm mmi
cd ..
mkdir file?reader
mkdir file_reader
ls
cd file_reader
touch config.txt
nvim config.txt
g++ main.cpp -o prog
./prof
./prog
nvim main.cpp
fr
cd Download
cd Downloads
mv 'prog-dynamique (6).pdf' ~/
cd
mv 'prog-dynamique (6).pdf' minimax-gregoire.pdf
ls
fr
us
cd dev/connect-4
mv src/config.txt .
nvim ./src
nvim src/main
nvim src/Board.
nvim src/Board.cpp
./minima
./miniamx
nvim src/main.cpp
make
nvim src
uiu
cp -r connect-4 minimax_connect4
cd minimax
rm minimax
rm Makefile
cd connect-4
nvim config.txt
./minimax
cd ..
cd minimax_connect4
lls
ls
yo
ls
feh minimax-gregoire.pdf
cd rebecca
ls
nvim rebecca.cpp
cd
nvim rust.txt
shutdown now
fr
shutdown now
fr
nvim
shutdown now
nvim quizlet
fr
fr
us
fr
fr
us
cd Downloads
feh grunge-anime-1920-x-1080-z2rh06yq21wi4l0d.jpg
ls
rm grunge-anime-1920-x-1080-z2rh06yq21wi4l0d.jpg
