rm .zhistory
echo $fpath
nvim .zhistory
echo $PROMPT1
echo $PROMPT2
echo $PROMPT3
echo $KEYTIMEOUT
echo $KEYMAP
PROMPT=%mm%#
PROMPT=m%m%#
PROMPT=%m%%m%#
echo $RPROMPT
RPROMPT=%m%#
PROMPT=%m %m%#
PROMPT=%m% %m%#
PROMPT=%m%m%#
PROMPT=%l%m%#
PROMPT=%M%m%#
PROMPT=%M%#
PROMPT=%m%#
PROMPT=%m%n%#
PROMPT=%n@%m%#
PROMPT=%n@%m%d%#
PROMPT=%n@%m%1d%#
PROMPT=%n@%m-%1d%#
PROMPT=%d%#
PROMPT=%1d%#
PROMPT=%~>
PROMPT=%~%>
PROMPT=%~ >
PROMPT=%~
PROMPT=%~%[>]
PROMPT=%~%>fjasdl>
PROMPT=%~%[fjklas]
PROMPT=%~%#
PROMPT=%F{white}%~ %B%F{blue}>%f%b 
PROMPT='%F{white}%~%B%F{blue}>%f%b '
PROMPT='%F{white}%~ %B%F{blue}>%f%b '
fjklasd;
RPROMPT=%m
fdasjlkjfjjfkldjasfjkl;asdjkl;fjkl;sadjfkl;jkl;asdjklflkasjdfjklaskdjfl;jasdklfj;ajsdklfjl;asdjklfjlsadjlfjsja
claer
fasdjlk
bash
.config
fjalsd
nvim /zshrc
cd .config/zsh
sudo pacman -S tmux
tumux
tmux -list-sessions
tmux --list-sessions
while :; do echo "Alive"; sleep 1; done
tmux attach-session 0
mkdir tmux
mv .config/tmux/tmux.conf .dotfiles/tmux/.config/tmux
stow tmux
tmux kill-session -t 1
nvim %f%b
rm %f%b
nvim ]
rm ]
ww
jfklasdas
jkljkflasd
tmux kill-session
rm greg
cd tmuc
tmujx
tmux attach-session
cd tm
fjklasfja
j

nvim greg
nvim file2
mkdir greg
fas
sudo pacman -S fzf
fzf --help
nvim fzf
nvim read.md
nvim markdown-preview.lua
nvim readme.md
nvim .md
cd nvim/lua/user
nvim school/biologie/2-Cytologie
cd pdf
cd .config/nvim/lua/user
nvim plugins.lua 
mkdir biologie
cd francais
ols
cd biologie
mkdir 2-Cytologie
cd 2-Cytologie
pandoc -s Cytologie.md index.html
nvim Cytologie.md
pandoc -s Cytologie.md -o index.html
chromium index.html
nvim file1
rm file*
g++ test.cpp -o programme
g++ -std=c++20 test.cpp -o programme
g++ -std=c++20 Test.cpp -o programme
g++ -std=c++2a test.cpp -o programme
g++ -std=c++2a -fmododules-ts test.cpp -o programme
sudo pacman -S c++
sudo pacman -S g++
sudo pacman -S gcc
nvim mod.mpp
rm programme
g++ -std=c++2a -fmodules-ts test.cpp -o programme
mv mod.mpp mod.cpp
nvim tse
nvim gcm.cache
g++ -std=c++2a -fmodules-ts mod.cpp test.cpp -o programme
g++ -std=c++2b -fmodules-ts mod.cpp test.cpp -o programme
mkdir modules
g++ -fmodules-ts test.cpp main.cpp
./a.out
g++ -fmodules-ts -fmodules-header test.cpp main.cpp -o programme
g++ -fmodules-ts -fmodule-header test.cpp main.cpp -o programme
rm a.out
rm -rf gcm.cache
g++ -fmodules-ts -fmodule-header main.cpp -o programme
ks
g++ -fmodules-ts main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme\
g++ -fmodules-ts test.cpp main.cpp -o programme
ls j-a
$PROMPT=caca$PROMPT
$PROMPT=caca $PROMPT
$PROMPT=caca:$PROMPT
$PROMPT='%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m %F{red}%~ %B%F{blue}>%f%b'
PROMPT='%F{red}%n@%m %~ %B%F{blue}>%f%b'
help
man
cd home
PROMPT='%F{red}%n %~ %B%F{blue}>%f%b'
PROMPT='%F{red}(%n) %~ %B%F{blue}>%f%b'
cd gregorie
cd gregoire
PROMPT='%F{red}%~ %B%F{blue}>%f%b'
<<<<<<<<<<'''''''<<<<[[]
nvim .config
cd us
cp us ~
setxkbmap ./us
mv us test
setxkbmap ./test
cp test /usr/share/X11/xkb/symbols
cp test /usr/share/X11/xkb/symbols/test
mv us ..
mv us dwarf
setxkbmap ./dwarf
cp dwarf /usr/share/X11/xkb/symbols
sudo cp dwarf /usr/share/X11/xkb/symbols
setxkbmap us
otnsryeic\

\
ytserni
redshift -O 300
redshift -O -3000
ua
\:
\:w
sudo pacman -S rust
mkdir workspaces
ll
dir -a
cargo new testRust
cd guild
./testRust
cd sr
nvim Cargo.lock
nvim Cargo.toml
cd examples
cargo help clean
cd testRust
gpm
dpm
pandoc --help
nvim mod.cpp
gr
cd /usr/share/X11/xkb/symbols/
cargo INSTALL
cargo install
cargo NEW
cd greg
cargo new caca
cargo help new
nvim Readme.md
nvim current.txt
bang
cd workspaces
rm -rf testRust
rm -rf workspaces
mkdir workspace
mkdir bang
g++ main.cpp -o programme
./programme
make clear
make run -fasdjl -0afds
make run fjasdkl
./bang fasd fasd ;asdl
./bang fasd fasd asdl
./bang -test
cargo new
cargo -new
cargo --new
cargo --help
cargo version
cargo -V
cargo V
cargo b
cargo h
cargo -h
./bang caca
./bang 
cargo help install
cargo help
cargo install help
./bang
./bang gregoire help
./bang  help gregoire
./bang help
./bang gregoire gregoire
cargo help help
g++ main.cpp -o test -o test
g++ main.cpp -o test -o test2
rm test2
gcc --version
gcc --version --version
./bang gregoire
.>\
.>\
.>\
.>
sudo pacman -S xdotools
sudo pacman -S xdotool
xdotool key super+j type "{ "
j{ 
xdotool key super+j "203d "
xdotool key super+j "{"
xdotool key super+j type "{"
j{
type "{"
type "djlsk"
xdotool key super+j type "203d"
j203d
xdotool key super+j type "203d "
j203d 
xdotool
xdotool key ctrl+j type "{"
jj
xdotool key ctrl+j
jjjjjjjj
xdotool key ctrl+g type "fjaskl"
fjaskl
xdotool key ctrl+g type "203d "
203d 
xdotool type "Hello"
Hello
type "Hello"
xdotool key ctrl+g type "Hello"
xdotool key Super_L+g type "Hello"
xdotool key --clearmodifiers Super_L+g type "Hello"
xdotool key --clearmodifiers super+g type "Hello"
Ke
Key
xbindkeys
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............
...................>>>\
...................>>>\
...................>>>\
...................>>>\
...................>>>
>>>>
tsrn;;::
echo "Hi"
ytseirs
tyesri strn tsrnyeitsr;
iyyeeeeyiippppppeyyyeeiyetisryysn\
itsrn
xev
sudo pacman -R xdotool
sudo pacman -S gh
gh --version
git
gh repo --help
gh auth login
sh
gh
gh repo
gh pr status
cd .git
cd branches
nvim HEAD
nvim description
git -remote -v
sudo pacman -S ssh
sudo pacman -Syu 
ssh-keygen
gh ssh-key add 
gh auth refresh -h github.com -s admin:public_key
gh ssh-key add ~/.ssh/id_ed25519.pub
nvim ..............
rm ..............
nvim .lesshst
rm .lesshst
cd qmk_firmware
rm -rf qmk_firmware
rm -rf .ssh
exec
exec ssh-agent zsh
ssh-add ./.ssh/id_ed25519
gh ssh-key add .ssh/id_ed25519.pub
git remote -v
ssh-keyscan github.com >> ~/.ssh/known_hosts
sudo pacman -S openssh
sudo pacman -S github-cli
nvim install_ssh.sh
cd CLI
git commit -m "main file"
gh issue create
gh issue 
gh issue create --help
gh issue status
gh repo view
gh repo view test
gh repo view CLI
cd bang
gh 
gh repo create
git commit -m "Add readme.md"
git push origin master
sudo pacman -S noto-emoji
yay -S noto-emoji
sudo pacman -S noto-fonts-emoji
cd /usr/
cd share/X11/xkb
popd
setxkbmap --help
help 
pushd ~
{#{{{{{{eiyyyitsrotsrntsr\
ytsr\
\
\
\

iii
cd ie
cd cd
cd config
nvim us
sudo /usr/share/X11/xkb/symbols/dwarf
sudo nvim /usr/share/X11/xkb/symbols/dwarf
>tyesirseet
tsr";:q\
<q\
<q\
<q\
<q\
"
<w
<kq
<q1
<q
<qw
<wq
>q
<
>
\:wq
Af
gs
sudo nvim /etc/pacman.conf
sudo pacman -S steam
steam
cd .paradoxlauncher
cd .steam
cd Steam
cd steamapps
sudo pacman -R steam
sudo pacman -Ryu steam
sudo pacman -Ru steam
sudo pacman -C
sudo pacman -c
sudo pacman -Sc
nvim q
rm q
rm -rf .paradoxlauncher
rm -rf .steam .steampath .steampid
glr
.s
jklfas
redshift -O 4000
sudo nvim us
sudo nvim ch
tysrnei
ytesreey
irx
slx
r
cleanr
{}x\
{}\

tysre
tsryi:
tsrnyi
;
ynsr
ietyeisrnaiasraaaaa
exitg
reshift -O 3500
reshift -O 350
redshift -O 350
{}
sudo nvim dwardf
fjklas
sudo pacman -S surf
yay -S surf
rm dwarf
srntmpyeiabjjjkkkkjjjjjjjjjj12k2j8j8j8tsr
surf help
surf -e
surf google
surf google.com
i3 workspace number 4
dmenu_run
rofi -show drun
sudo pacman -S rofi
rofi show run
rofi -show windows
rofi -show window
mkdir rofi
nvim rofi.cfg
mv rofi.cfg config.rasi
mv config.rasi rofi.cfg
rofi -show drun -show-icons
rofi -show filebrowser
rofi -show emoji
rofi-theme-selector
rm config.rasi
rm rofi.cfg
stow rofi
cd rofi
nvim config.rasi
surf
rofi -show run
surf suckless.org
tabbed
sudo pacman -S krita
mkdir surf
cd surf
mkdir styles
nvim default.css
mv default.css ~/.surf/styles/
cd .surf
cd styles
rm -rf surf
sensore
sensores
sensor
cp dwarf ~/.dotfiles
sudo pacman -S gimp
yay -S aseprite-git
tysreina
cd /usr/share/fonts
fasd
fjksdla;l;
fz
sudo pacman -S blender
blender
cd .config 
mkdir ~/.dotfiles/polybar/.config/polybar
mkdir polybar
cd /usr/share/doc/polybar/
sudo cp config ~/.dotfiles/polybar/.config/polybar
stow polybar
cd Lavafall
cd LavsFall
cd LavaFall
mkdir gomoku
cd | fzf
cd<fzf
fzf | cd
cd workspace/gomoku/
py
python3 main.py
redshift -O 2000
pkill redshift
pkill
pkill --help
pkill -f redshift
redshift
redshift list
redshift -m list
celar
setxkbmap dwardf
ur
aprint(prime_factors_a, prime_factors_b)
setxkbmap dwar
py main.py
python main.py
cd workspace
cd gomoku
nvim main.py
cd /usr/local/share/nvim/runtime
cd syntax
nvim syntax.vim
nvim ch
git add A
xinput
while (tysrne)isrnt)){
uc buwwhcbh - =hvdh .sr wsi hc kdso cuc wuo yh vdugkh fgo ro
cp dwarf ~/.dotfiles/dwarf
cd mnt
cd windows10
sudo pacman -S vifm
viv
vifm
vim
nvim .bashrc
sudo pacman -S nnn
nnn -e
rm *.md
setxkbmap -h
man setxkbmap
cd /etc/X11/xinit
cd xorg.conf.d
nvim README
cd lua/user
cd .pki
cd nssdb
nvi pkcs11.txt 
nvim pkcs11.txt
cd usr
cp ~/.dotfiles/dwarf .
pwd
ln
ln --help
rm -rf vimwiki
sudo pacman -S ranger
nvip
rm rf test.md
echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"\

echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"
echo 'tyiesr'
echo '<h1>hello</h1>' | chromium
echo '<h1>hello</h1>' | chromium "data:text/html;"
git clone https://github.com/aur.archlinux.org/yay.git
sh ./install.sh -y
yay pandoc
yay pandoc-bin
pandoc -h
pandoc -v
htmltopdf
sudo pacman -S htmltopdf
sudo pacman -S wkhtmltopdf
wkhtmltopdf -v
wkhtmltopdf -V
n.p
npm install -g npm@8.12.1
sudo npm install -g npm@8.12.1
npm audit fix --force
echo $
live-server -h
pandoc
sudo pacman -S pandoc
sudo pacman -S pandoc-bin
shutdown
sudo shutdown
pandoc --no-highlight --metadata title="title" *.md
pandoc --no-highlight --metadata title="title" -s Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" index.md -o index.html
nvim index.
nvim Index2.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html --lua-filter=filters/links.lua
cd .. 
nvim autocmds.lua
live-server Index2.html
cd vimwike
cd wi
live
sudo pacman -S obsidian
obsidian
reset
. -h
.
.717
. 717
history
pyeyepeypyeyeye
nvim file
rm file
sudo pacman -S ncdu
cd .dotfiler
ls -
nvim .pkglist
sudo pacman -S ntfy
touch file
rm file && echo Success || echo Failure
pip3
date
notify-send
sudo pacman -S notify-send
sudo pacman -S notify
sudo pacman -S gource
gource
gource --help
sudo pacman -S cmatrix
sudo pacman -R cool-retro-term
sudo pacman -S cool-retro-term
cool-retro-term
sudo pacman -S btop
btop
cmatrix
cd.
la
cd org
cd -a
rm inh
cd-
live-server index.html
live-server index.html&
ntsr
ps
jobs
cd\\
cd
touch style.css
nvim style.js
nvim index.md
pandoc index.md -o index.html
cp index.html ../test.html
sudo powerofff
nvim home.html
mv home.html homepage.html
sudo powerof
redshift -O 3500
cp eventEmitter.js mouse.js
nvim mouse.js
unzip 222-responsive-icon-nav-css-master.zip
cd 222-responsive-icon-nav-css-master
cd public
nvim dad
nvim data.json
cp style.css style2.css
nvim style2.css
rm style2.css
sudo pacman -S discord
sudo pacman -S sql
yay mysql
sudo pacman -S mysql
mysql
mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
sudosudo!
sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
mariadb
mariadb.service
mv modeles-atomiques.html modeles atomiques.html
mv modeles-atomiques.html modeles\ atomiques.html
mv modeles\ atomiques.html modèles\ atomiques.html
sudo pacman -S slock
rm -rf chimir
rm -rf chimie
pandoc couches\ électroniques.md -o couches\ électroniques.html
pandoc modèle\ atomiques.md -o modèle\ atomiques.html
nvim modèle\ atomiques.html
mv modèle\ atomiques.html ~
mv modèles\ atomiques.html modeles-atomiques.html
mv modèle\ atomiques.html modeles-atomiques.html
slock
cp school/Excalidraw/modele-thomson.png images
unzip AppImages.zip
mv android ios windows11 icons.json ~
cat icons.json
cp school/Excalidraw/
cp school/Excalidraw/modèle-dalton.png ~/images
rm images
cp school/Excalidraw/modèle-dalton.png ~/images/
cp school/Excalidraw/modele-thomson.png ~/images/
cp school/Excalidraw/modele-rutherford.png ~/images/
cp school/Excalidraw/modele-bohr.png ~/images/
cp /images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp school/Excalidraw/modele-schrodinger.png ~/images/
nvim serviceWorker.js
style.css
pandoc accueil.md -o accueil.html
nvim accueil.html
mv accueil.html ~
mv accueil.html homepage.html
mv homepage.html pages
mv pages/homepage.html ~
rm 2
nvim 4.caca
nvim 5.caca
nvim 6
live server
echo "ts"
ran
du
du -h
ls ./markdown/*.md | entr -d -p echo "$1"
echo ./markdown/*.md | entr -d -p echo "$1"
ls -d *
ls -R ./markdown/*.md
ls -R *.md
echo -R *.md
ls -R *
ls ./markdown/*.md
ls ./markdown
ls -R ./markdown
ls -R ./markdown *.md
echo ./markdown/*.md | entr -d -p | echo "$1"
echo ./markdown/*.md | entr -d -p echo "$2"
mkdir pages
mv homepage.html modèles\ atomiques.html pages
mv homepage.html ..
mv data.json data/pages.json
mkdir js
mv eventEmitter.js main.js mouse.js serviceWorker.js js
mkdir css
mv style.css css
nvim modèle-dalton.excalidraw
mkdir markdown
cd school/chimie school/Excalidraw markdown
mv school/chimie school/Excalidraw markdown
mv accueil.md ..
rm Drawing\ 2022-06-30\ 12.25.58.excalidraw.md
rm modèle-dalton.svg
rm *.excalidraw
nvim move.sh
sh ./move.sh
git clone "github.com/mirai-wiki/mirai-wiki.github.io"
echo ./*.caca
echo *.caca | entr echo "tete"
ls *.caca | entr echo "tete"
ls ./ | entr echo "tete"
echo ./ | entr echo "tete"
ls . | entr echo "tete"
ls . | entr -d echo "tete"
entr -h
nvim 2
nvim 2.caca
nvim 3
nvim 3.cac
nvim 3.caca
mkdir ci
ls -r
ls -R
nvim 1
nvim 1.caca
nvim 45.caca
nvim 45
cd ci
nvim 0
nvim 12.caca
nvim 12
nvim 452.caca
mv start.sh ~/mirai-wiki.github.io/
rm -rf test
watchexec
watchexec echo $WATCHEXEC_WRITTEN_PATH
$
ls ./markdown/*.md | entr $1 -d -p echo $1
cron
sudo pacman -R entr
sudo pacman -S watchexec
watchexec echo "$WATCHEXEC_WRITTEN_PATH"
watchexec 'echo "$WATCHEXEC_WRITTEN_PATH"'
watchexec -w markdown 'echo "$WATCHEXEC_WRITTEN_PATH"'
grep
grep accueil.md
grep -h
find . -name accueil.md
basename
basename "./test/cici.md"
basename -{
basename -h
basename --help
basename -s "./test/cici.md"
basename -s=".md" "./test/cici.md"
echo "${./test/cici.md%.md}"
echo "./test/cici.md%.md"
echo "./test/cici.md%.*"
echo "${./test/cici.md%.*}"
dirname
dirname "./test/cici.md"
basename -s ".md" "./test/cici.md"
basename -s ".md" "./test/cici.md" {} +
basename tysir/tyeisr/tsryeni.tyeisr
rm couches\ électroniques.md
rm WATCHEXEC_WRITTEN_PATH
qd
cd mirai-wiki.github.io/markdown
mkdir filters
xargs
cut
rev
basename "pages/caca.ci" .ci
mv modèle-dalton.png modele-dalton.png
live-server&
start
cat links.lua
feh brout.png
rm brout.png
rm brout.html
rm Drawing\ 2022-06-30\ 19.01.10.excalidraw.html
rm move.sh
find *.md
find . *.md
find -prune
sh ./gen_json.sh
cut -d '/' "./markdown/chimie/test.md"
cut -d'/' "./markdown/chimie/test.md"
cut -d '/' -f4- "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md" | cut -d '/' -f-3
echo "./markdown/chimie/test.md" | cut -d '/'
echo "./markdown/chimie/test.md" | cut -d '/' -f4-
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename 
echo "./markdown/chimie/test.md" | cut -d '/' -f3-
basename chimie/test.md
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.'
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm test.html
mkdir chimie
echo "/mdown/chie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
cut --help
cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
echo "./makdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm couches\ électroniques.html
rm modèles\ atomiques.html
rm atome.html
git pusl
rm -rf markdown
rm -rf css
rm -rf data
rm -rf js
rm -rf pages
rm -rf windows11
nvim hugo-like
rm homepage.html
rm icons.json
rm manifest.json
jq test
jq -R -s -c "split('\n')" < test
<test jq -Rs '{map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{array:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{'':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{' ':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{{}:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{filename:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
echo '$meta-json'
echo '$meta-json$'
pandoc --template="$meta-json$"
pandoc test.md --template="$meta-json$"
pandoc test.md --template="\$meta-json$"
echo '$meta-json$' > /tmp/metadata.pandoc-tpl\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\
]
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
\

pandoc --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template='$meta-json$' | jq
pandoc test.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl
pandoc *.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test2.md --template=/tmp/metadata.pandoc-tpl | jq
nvim Untitled.html
nvim modèles\ atomiques.html
nvim test2.html
Liquid Exception: Invalid Date: '{}' is not a valid datetime. in /_layouts/default.html\
             ERROR: YOUR SITE COULD NOT BE BUILT:\
                    ------------------------------------\

cd templates
nvim page.md
nvim _config.yml
touch pages.json
rm -h
rm --help
rm pages.json
head -n -1 pages.json
nvim /tmp/metadata.pandoc-tpl
dirname pages.json
dirname "tyeisr/.tsryei"
dirname "tyeisr/ptysrpe/caca.e"
dirname "./markdown/chimie/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '\t"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo -e '\t"folder": "{}"'
pandoc "./markdown/chimie/caca.test" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo {}::-1\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo "{}::-1"\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1 >> ./data/temp.json
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(echo caca)\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file")
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | jq\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | echo\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | cat\
\

jq
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
jq |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' \
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
echo '"yteis"'
echo '"yei"'
echo '"yei"' | xargs -I {} echo {}
echo '"yei"' | xargs -0 -I {} echo {}
echo '"yei"' | xargs -d -I {} echo {}
echo '"yei"' | xargs -d '"' -I {} echo {}
cd a
cd a2
cd ri
sh ./start.sh
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*"
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" | while read line ; do\
echo "$line"\
done
rm README.md
git reset
git pull
rm -rf mirai-wiki.github.io
git clone "https://github.com/mirai-wiki/mirai-wiki.github.io"
sed
nvim publish.sh
nvim ge
publish
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')}
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev\
')\
\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{},'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
js
cat gen_json.sh
echo '$meta-json$' > /tmp/metadata.pandoc-tpl
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq \

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md"\
\
)
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= $(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")"\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder |= $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder '|=' $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= '$(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md")'"'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev)'"'\
\
\

echo pages.json
echo $pages.json
echo ${pages.jso}n
echo ${pages.json}
echo ./pages.json
echo './pages.json'
cd dat
cd d
touch clean.sh
find . -maxdepth 1 -mindepth 1 -type d\

find . -maxdepth 1 -mindepth 1 -type d\
find . -maxdepth 1 -mindepth 1 \! -type d
\
find . -maxdepth 1 -mindepth 1 \! -type d
find . -type d\
find . \! -type d
ls --group-directories-first
ls --group-directories
ls -l
ls -d
ls -d */
ls -d */ | sort
ls -d */ | sort -z
find .
find . -name ".md"
find . -name "*.md"
sudo pacman -S tree
tree -h
tree --hel
tree --help
tree -P "*.md"
ls -la | grep "^d" && ls -la | grep -v "^d"
tree -P "*.md" --dirfirst
tree -P "*.md" --dirsfirst -A
tree -P "*.md" --dirsfirst
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" -not -path "./markdown/homepage.md"
tree -P "*.md" --dirsfirst -f -i
tree ./markdown -P "*.md" --dirsfirst -f -i -F
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v /$
tree ./markdown -P "*.md" --dirsfirst | grep -v '/$'
find --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '\.md$'
grep --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep '\.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i
rm Untitled.html
nvim test.html
sudo pacman -S json-sort-cli
npm i -g json-sort-cli
sudo npm i -g json-sort-cli
sortjson
sortjson -h
sortjson pages.json
echo '{"title": "caca"}' | jq '.folder |= "chimie"'
nvim pages.json
nvim data/pages.json
nvim eventEmitter.js
cd bss
nvim css
mkdir images
unzip 'AppImages (1).zip'
rm -rf images
nvim icons.json
feh android-launchericon-192-192.png
feh 1024.png
feh logo.svg
unzip 'AppImages (2).zip'
nvim ma
unzip 'AppImages (3).zip'
cd android
feh android-launchericon-512-512.png
rm -rf android ios
rm -rf android
rm -rf ios
mv ~/Downloads/ios .
mv ~/Downloads/android .
nvim gen_json.sh
sh gen_json.sh
nvim sy
nvim index
sh data.filter((state) => {\
const regex = new RegExp(searchbar.value, "gi");\
return state.title.match(regex);\

nvim main
sudo pacman -S pulseaudio
cls
sudo restart
nvim homepage.html
cd index
sh start
mkdir iosatan
cd Excalidraw
feh logo\ \(1\).png
pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator ./markdown/Excalidraw/logo.svg .
sudo pacman -S chrome
sudo pacman -S Chrome
ldd chrome | grep not
chromium
chromium --no-sandbox
$BROWSER=chromium
nvim .xprofile
echo $BROWSER
sh pu
npm install --global pwa-asset-generator
sudo npm install --global pwa-asset-generator
pwa-asset-generator
sudo pacman -S google-chrome
yay -S google-chrome
chrome
google-chrome
pwa-asset-generator ./markdown/Excalidraw/logo.svg .
nvim manifest
rm apple-splash-1125-2436.jpg apple-splash-1136-640.jpg apple-splash-1170-2532.jpg apple-splash-1242-2208.jpg apple-splash-1242-2688.jpg apple-splash-1284-2778.jpg apple-splash-1334-750.jpg apple-splash-1536-2048.jpg apple-splash-1620-2160.jpg apple-splash-1668-2224.jpg apple-splash-1668-2388.jpg apple-splash-1792-828.jpg apple-splash-2048-1536.jpg apple-splash-2048-2732.jpg apple-splash-2160-1620.jpg apple-splash-2208-1242.jpg apple-splash-2224-1668.jpg apple-splash-2388-1668.jpg apple-splash-2436-1125.jpg apple-splash-2532-1170.jpg apple-splash-2688-1242.jpg apple-splash-2732-2048.jpg apple-splash-2778-1284.jpg apple-splash-640-1136.jpg apple-splash-750-1334.jpg apple-splash-828-1792.jpg 
feh manifest-icon-192.maskable.png
rm manifest-icon-192.maskable.png manifest-icon-512.maskable.png
mkdir pwa-images
pwa-asset-generator ./markdown/Excalidraw/logo.svg ./pwa-images -m ./manifest.json -i ./index.html -b "white" -t "png" -h
cd pwa-images
cp ios manifest.json js/serviceWorker.js ~/iosatan
cp ios/ manifest.json js/serviceWorker.js ~/iosatan
cp -r ios/ manifest.json js/serviceWorker.js ~/iosatan
cd ios
cat index.html
nvim manifest.json
cat main.js
cp -r index.html css ~/iosatan
cd mi
nvim test2.md
rm test2.md
cd iosatan
rm -rf iosatan
nvim testObs
cd testObs
rm -rf testObs
rm -rf school
nvim Index1.md
cd vimwiki
nvim links.lua
cd markdown
cd filters
cd markdown/filters
nvim filter.lua
nvim music.js
rm music.js
cd pages
cd chimie
nvim couches\ électroniques.html
cd ..]
cd css
nvim style.css
cd js
npm install youtube-audio-stream
youtube-audio-stream
sudo pacman -S node-ytdl
yay -S node-ytdl
npm install ytdl-core@latest
ytdl-core
ytdl-core@latest
sudo npm -g install ytdl
ytdl
ytdl https://www.youtube.com/watch?v=YltjliK0ZeA&ab_channel=NekfeuVEVO
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA"
rm Nekfeu\ -\ On\ Verra\ \(Clip\ Officiel\).mp4
mpv
alsa-utils
alsamixer --h
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA" | mpv -
ytdl "https://www.youtube.com/watch?v=aiCCsOFSRBU" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audio" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audioonly" | mpv -
live-re
live-s
node
node main.js
mvp video.mp4
mpv video.mp4
rm video.mp4
npm install browrerify
sudo npm install browrerify
sudo npm install browserify
sudo npm install -g browserify
browserify
browserify main.js
browserify main.js > index.js
cat index.js
browserify main.js > yt.js
rm -rf yt
sh start.sh
mkdir ytdl
mv node-ytdl-core-4.11.0.zip ytdl
cd ytdl
unzip node-ytdl-core-4.11.0.zip
cd node-ytdl-core-4.11.0
cd files
nvim tsconfig.json
mv node-ytdl-core-4.11.0 ~/node-ytdl
mv main.js node-ytdl
mv index.html node-ytdl
main.js
cd node-m
cd youtube-audio-stream
cd node-ytdl
rm -rf node-ytdl
nvim package-lock.json
mkdir yt
cd yt
npm i ytdl-core
cd node_modules
cd ytdl-core
nvim index.js
cd y
cd typings
nvim yt.js
curl
curl -vL srntyeia.github.io/okhttp 2>&1 | fgrep -i access-control-allow-origin\

chromium -h
man chromium
chromium --disable-web-security
nvim main.js
rm main.js
rm index.html
cd mirai-wiki.github.io
sh publish.sh
cd srv
sudo pacman -S apache
apache
cd lik
cd lib
cd etc/httpd
nvim indej
sudo nvim index.html
sudo pacman -S apache2
sysytemctl
sudo chmod 755 http -R
chmod 777 index.html
sudo chmod 777 index.html
nvim index.html
sudo chmod 777 http
sudo pacman
sudo pacman -S php
sudo pacman -S libapache
sudo pacman -S libapache2
sudo pacman -S libapache2-mod
sudo pacman -S libapache2-mod-php
sudo pacman -S php-apache
cd /etc/php/
nvim php.ini
cd /etc/httpd
cd conf
cd extra
fzf | nvim
cd etc
cd httpd/conf/extra
nvim php_module.conf
httpd
sudo httpd -h
cd /etc/httpd/conf/extra
sudo nvim php_module.conf
cat php_module.conf
cd etc/php
cd conf.d
mv index.html index.php
cd /etc/httpd/conf
sudo nvim httpd.conf
sudo httpd
nvim httpd.conf
sudo nvim php.ini
httpd -k restart
sudo httpd -k restart
cd /srv
cd http
ping
avahi-browse 
avahi-browse --help
avahi-browse --all
ssh pi@192.168.0.10
ssh pi@192.168.1.10
sudo pacman -S hostname
yay -S hostname
sudo pacman -S inetutils
hostname -I
hostname --help
hostname -i
ping raspberrypi
ping 192.168.1.165
ssh 192.168.1.115
ping raspberrypi.local
cd /home/gregoire/.ssh
php
entr
sudo pacman -S entr
php -v
php -h
php -S localhost:8000 -d error_reporting(E_ALL);
php -S localhost:800
php -S localhost:8000 -r error_reporting(E_ALL);
php -S localhost:8000 -r error_reporting(E_ALL)
php -S localhost:8000 -r "error_reporting(E_ALL)"
mkdir php
mkdir html
nvim header.html
nvim footer.php
mv header.html header.php
cd html
nvim header.php
nvim config.php
php -S localhost:8000
cd usr/share/X11/xkb/symbols
sudo dwarf
cd ]
cd /usr/share/X00/xkb/symbols
cd /usr/share/X11/xkb/symbols
sudo nvim dwarf
ping 192.168.1.115
ping 192.168.1.116
ssh pi@192.168.1.116
nvim functions.php
mkdir data
cd data
nvim views
rm views
sudu pacman -S sqlite
sudg pacman -S sqlite
sudo pacman -S sqlite
sqlite
sqlite3
mkdir ansible
nvim host
nvim hosts
nvim playbook.yml
nvim sudoers.d
sudo cd sudoers.d
cd sudoers.d
sudo pacman -S ansible
cat main.cpp
cd php
php -S localhost:8000 -e error_reporting=E_ALL
php -S localhost:8000 -r error_reporting=E_ALL
mkdir site-test
cd site-test
php -S localhost:8000 -d error_reporting=E_ALL
mkdir sqlite
nvim db.sqlite
rm db.sqlite
cd sqlite
touch db.sqlite
sqlite3 db.sqlite
nvim packer.nvim
cd xkq
nvmi init.lua
cd pach
cd packq
lsa
ls -li
ls -la
ls -s
cd cache
nvim nvi
cd user
rm -rf lua
nvim rplugin.vim
rm -rf pach
cd state
cd shada
nvim main.shada
cd swap
mkdir lua
mkdir main
nvim test.sh
nvim test.py
sudo pacman -S man
ranger
sls
touch plugins.lua
nvim pl
tyeirn
cd local/share/nvim/site
nvim ini
touch cmp.lua
nvim cmp
nvim lsp.lua
touch lsp.lua
rm lsp.lua
mkdir lsp
nvim lsp
touch init.lua
touch lsp-installer
touch handlers
mv handlers handlers.lua
mv lsp-installer lsp-installer.lua
what_i_got
S
addP
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_R_OPTS="--preview 'tree -C {} | head -200'"
pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S\

dir
cdd
export FZF_ALT_C_OPTS="echo 'caca'"
cd /usr/share/fzf/
source key-bindings.zsh
cd .config/local/share/nvim/site/
cd '\

echo $FZF_COMPLETION_TRIGGER
cd **
cd .fzf
. .zshenv
cd /usr/share/fzf
nvim key-bindings.
rofi
cd .conf
find -L .
find --hidden .
find
fd --hidden
fd --hidden --exclude "Cache"
fd --hidden --exclude "Cache" ".git"
fd --hidden --exclude "Cache" --exclude ".git"
fd --hidden --exclude "cache" --exclude ".git"
fd --include .config
fd --hidden --exclude --follow "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git" --exclude "chromium"
fd --hidden --type d
fd --hidden --type d --exclude "cache"
cd /usr/local/bin
nvim nvim
fd --hidden --type d --exclude "cache" --exclude ".git"
fd --hidden --type d --exclude "cache" --exclude ".git" $HOME
fd --hidden --type d --exclude "cache" --exclude ".git" . $HOME
cd fzf
nvim key-bindings.zsh
/home/gregoire/.dotfiles/nvim/.config/nvim/init.lua 
cd -- /home/gregoire/.config/
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/lsp/
fd --help
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/
cd -- /home/gregoire/.dotfiles/zsh/
lua
luajit
mkdir common
cd common
rm common
rm -rf common
cat init.lua
rm init.lua
ls configs
cd local/share/nvim/site/
rm -rf L3MON4D3 pack 
cd LuaSnip/
rm -rf nvim-cmp
nvim .git
cd nvim/site/
nvim pack
cd pack/packer/start
cd packer.nvim
nviv README.md
cd nvim-cmp
cd L3MON4D3
rm -rf L3MON4D3
cd site/pack/packer/start
cd nvim-lsp-installer
nvim nvim-lsp-installer
nvim nvim-lsp-installer.lua
git clone "https://github.com/wbthomason/packer.nvim/commit/e4c2afb37d31e99b399425e102c58b091fbc16be"
git clone "https://github.com/wbthomason/packer.nvim/"
rm -rf packer.nvim
cd .con
clang
nvim test.lua
mkdir settings
cd main
nvim plugins.lua ls
mv main modules
cd modules
mv modules configs
cat list_plugins.lua
cd packer/start
cd ripgrep
rm -rf ripgrep
rg
cd .config/local/share/nvim/site
nvim main.lua
nvim lsp-installer.lua
mv lsp-installer.lua srv-configs.lua
touch telescope.lua
nim
nvim autopairs
nvim autopairs.lua
nvim tree.lua
nano
vi
nvim packer_compiled.lua
nvim plugin
rm -rf plugin
cd plugin
nvim lua
cd treesitte
nvim treesitter.lua
cd share/nvim/site
rm -rf pack
i
tyisr
tyeisrniysrtuuuuupppyyyeee..
tsryitisryeytsrigo
go
cd ansible/playbook.yml
tyeisr
cd $(fzf)
cd $(fzf --type d)
fzf -t d
fd --type d
cd $(fd --type d | fzf)
cd ansible
tsr
compinit
tnysre
tysrei
msr
sr
m
ms
echo $(fzf)
man fzf
zle -al
bindkey
bindkey -L
print('')
echo
autoload -Uz promptinit\
promptinit
promptinit
echo $PROMPT
lsl
. ./.zshenv
source .zshenv
nvim $(fzf)
fzf --hidden
nvim .zshrk
export FZF_DEFAULT_OPTS='--bind=ctrl-y:up,ctrl-e:down'
echo $FZF_DEFAULT_OPTS
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:enter'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:confirm'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:return'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:select'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:print-query'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:accept'
echo $EDITOR
cd /usr/lib
rm -rf node_modules
sudo rm -rf node_modules
sudo pacman Syu
fzf --height
fzf --height 40%
nvim .zshenv
cp /usr/share/X11/xkb/symbols/dwarf .
nvim dwarf
git push --force
cndu
ncdu
yeitnsr
ntr
rtn
tr
trntrn
rnt
rn
trn
rntrn
w3m
w3m google.com
rmh
xinif
xinit
iaye
f
rm .w3m
rm -rf .w3m
nvim .tmux.conf
rm .tmux.conf
tmix
tmux list-keys | grep -t tab
tmux list-keys | grep -i tab
tmux list-keys | grep -i ctrl
tmux list-keys | grep -i control
tmux list-keys | grep -i esc
npm install -g intelephense
npm install -g semver
npm -v
yay -S ttf-comic-mono-git
fzf -h
fc-list | fzf
nvim zshrc
git clone "https://github.com/ryanoasis/nerd-fonts"
yay -S
nvim ComicMonoNerd.ttf
fc-list
mv ComicMonoNerd /usr/share/fonts/TTF/
mv ComicMonoNerd /usr/share/fonts/TTF
mv ComicMonoNerd /usr/share/fonts/TTF/ComicMono.ttf
cd /usr/share/fonts/TTF/ComicMono.ttf
mv ComicMonoNerd.ttf /usr/share/fonts/TTF
sudo mv ComicMonoNerd.ttf /usr/share/fonts/TTF
cd /usr/share/fonts/TTF/
cd pkglist
nvim aur
wkhtmltopdf
picom -h
picom -f
cd xo
inxi
compton
pgrep
pgrep compton
pgrep picom
kill 565
picom
feh naruto.jpg
mv ~/Downloads/download.jpeg ./abyss
feh abyss
mv abyss abyss.jpeg
source .xinitrcls
. .xinitrc
feh download.jpeg
1
cd .xinitrc
exif
fd
cd lua/configs/
nivm .xinitrc
\:q
e
exit
nvim tmux
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }exit
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }
tmux select-pane -L
echo "caca"
export IS_NOT_FZF=true
echo $IS_NOT_FZF
eaayeitsmpyeiexitts
cd lua/
nvim colorscheme.lua
nviv
yay
yay -S paperview-git
paperview
convert
ls .dotfiles/feh
paperview .
paperview . 20
paperview . 2
git clone "https://github.com/jtsiomb/xlivebg"
cd xlivebg
mv Makefile.in Makefile
unzip xlivebg-1.0.zip
cd xlivebg-1.0
make Makefile.in
rm -rf xlivebg-1.0
rm -rf xlivebg-1.0.zip
rm -rf xlivebg
yay -S xlivebg
cd picom
nvim picom.conf
opacity-rule = [\
    "100:class_g = 'Alacritty'"\

source ./tmux.conf
feh -h
source .xinitrc
t	
nvim keymaps
gcc main.cpp -o test
nvim tmux.conf 
ndim tmux.conf
nvim I
yeitsyye yetsy yetisnvim 
yeisyheyeitytyytiasr
lll
nvim plugins.lua
source config
source ./config
nvim colorscheme.lua o
mv chsh.txt ./.dotfiles
ln ./.dotfiles/chsh.txt .
nvim con
ilhhjkj
nnn
eeee
\

t
mkdir yaml
mv dotfiles yaml
cd yaml
mv dotfiles ..
rm -rf yaml
mv dotfiles dotfiles.yml
nvim dotfiles.yml
rm dotfiles.yml
tmuxp load dotfiles
tmuxp load tmuxp.yml 
tmuxp
nvim edit
tmuxp edit
mkdir tmuxp
nvim dotfiles
 ls -lah
 nvim +FZF
 tmux rename-session
echo "Session name: " && read session-name && tmux rename-session $session-name
echo "Session name: " && read session-name && tmux rename-session $(session-name)
echo $session-name
echo "Session name: " && read session_name && tmux rename-session $(session_name)
tmux new -d 'while true; do date; sleep 1; done' \; pipe-pane 'cat > /tmp/log'\

tmux new
tmux new -d
 echo "Session name: " && read session_name && tmux rename-session $session_name
tmux new -d 'echo caca'
tmux new -d "echo caca"
tmux new "echo cici"
 clear && echo "Session name: " && read session_name && tmux rename-session $session_name
exitexit
rustup -v
rustup install
rustup update
rustup self
rustup self update
cargo
rustup default 
rustup default -h
rustup default stable
rustc --version
rust
rustc
mkdir rustLearn
cd rustLearn
rustc main.rs
rustfmt main.rs
nvim main.rs
cargo --version
cargo new test
cargo new testo
cd testo
cargo build
cargo run
cargo check
cardo build --release
cargo build --release
cd target
./testo
cargo run --release
tmux attach -t dotfiles
read
read | fzf
echo $(read)
echo "$(read)"
print
print $(read)
read -p "rename session: "
read -p "rename session: " $(print)
read -p "rename session: " name && echo $name
read name && echo $name
echo $name
cd .config/tmuxp
tmux attach -t 3
tmux new "echo caca"
tmux new "read caca"
tmux load tmuxp.yml
exut
cd tmuxp
tmux list-sessios
tmuxp load tmuxp.yml
nvim tmuxp.yml
ssh pi@192.168.1.115
setkbmap dwarf
nvim --noplugin
nvim main.cpp --noplugin
tmux a
nvim index.php

yei
oxit
tyeisrn
makE
nvim chsh.txt hugo-like
nvit toggleterm.lua
nvim qey
bucklespring
setxkbmap dwarq
niv
nvim toggleterm.lua
openal
buckle -p
tmux list-sessiors
buckle --help
buckle 
buckle &
git clone https://github.com/tmux-plugins/tpm
nvim tmux t
echo $XDG_CONFIG_HOME | cd
cd $XDG_CONFIG_HOME
mkdir plugins
mv tpm plugins
cd tpm
echo pheww
tyesrniatrns
tyiasr
yteiasrntyneisra
tyiasrne
srntyeia
sudo nvim
psw
chpsw
passwd
echo phewww
git rm --cached tmux/.config/tmux/plugins/tmux-continuum
git -f rm --cached tmux/.config/tmux/plugins/tmux-continuum
git rm -f --cached tmux/.config/tmux/plugins/tmux-continuum
nivm
cd /usr/bin
./g++
cd lua/configs/lsp
mkdir src
mkdir lib
mkdir include
unzip AlsikeLab.zip
nvim Mabe
mkdir game game/src engine engine/include engine/src engine/external
git clone https://github.com/glfw/glfw
ls 
mkdir Engine
mv engine Engine
mv game Game
mv Game game
mv Engine engine
mv game myGame
cd ..ls
cmake -v
sudo pacman -S cmake
cmake --version
cmake .
rm CMakeCache.txt cmake_install.cmake Makefile
mkdir
mkdir game
tree .
unzip glad
cd glad.zip
unzip glad.zip
mkdir ~/dev/myGame/engine/external/glad/
mv * ~/dev/myGame/engine/external/glad/
mv glad.c ~/dev/myGame/engine/src/
mv glad\ \(1\).zip ~/dev/myGame/engine/external/glad
cmake clean
cmake --help
rm -rf *
rm -rf game
rm -rf engine
git remote add myGame
git branch main
git push myGame
git push --set-upstream myGame master
cat compile_commands.json
nvim compile_commands.json
rm -rf .git
rm -rf glfw
cd engine/external
git submodule add https://github.com/glfw/glfw .
git submodule add https://github.com/glfw/glfw ./glfw
git commit -m "Initial commit"
git remote add origin https://github.com/Ggcpp/myGame.git
git push -u origin "master"
cd gl
mv * ..
mv glad ../gladd
mv gladd glad
mv external/glad include
mv external/KHR include
rm -rf glad
rm -rf KHR
mkdir glad
unzip glad\ \(1\).zip
rm -rf glad\ \(1\).zip
cd GLFW
mkdin build
make Glad
make Engine
mabe glfw
make glfw
make Game
cd glfw
cd Game.dir
git commit -m "Add Glad"
rm glad.c
git commit
git commit -m "remove wrong glad file"
cd AlsikeStudio
nvim AlsikeStudioApp.cpp
nvim Application
cd ApplicationCreateInfo.l
nvim ApplicationCreateInfo.h
cd Win32
nvim WindowWin32.cpp
nvim Application.cpp
ln build/debug/compile_commands.json .
ln build/debug/compile_commands.json . --force
lfs
nvim AlsikeMain.cpp
cd Game
cmake tnrss
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
make release
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=release ..
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=debug ..
make debug
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG
cmake -S . -B build/release -DCMAKE_BUILD_TYPE=RELEASE
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1
cat README.md
sudo make run
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json .
git commit -m "Open a window"
cd engine/src
mkdir shaders
git commit -m "First triangle"
git commit -m "First rectangle"
git commit -m "Shaders"
sudo poweroff
./GAME
mv game/images engine
cd engine\\

mv engine/src/images game/src/
mv images ../../build/debug/game
feh opt/discord/discord.png
rm -rf tmux-continuum
git submodule https://github.com/tmux-plugins/tmux-continuum .
git submodule add https://github.com/tmux-plugins/tmux-continuum .
cd tmux/plugins
git submodule add https://github.com/tmux-plugins/tmux-continuum
mkdir test
cat sortie.txt
cd..
mike
fzf 
mv build/debug/engine/images game/src
feh images
nvim images
c d..
cd debud
cd agme
cd im
type
type images
tsrtS
mv src/images .
touch file.txt
cd images/
cd game/images
\n
nvim file.txt
cat file.txt
cd n
std::ofstream fichier { "sortie.txt" };\
    // On écrit un 3, un espace et un 4.\

feh image.png
feh game/images/image.png
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);	\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);\

git commit -m "Texture rendering"
make Release
ccmake
ccmake .
cmake
cmake ..
git submodule add https://github.com/g-truc/glm
cd engine/external/glfw
cd glm
maker un
cd AlsikeLab
nvim Engine
nvim Engine.h
cd Core
nvim Application.h
git commit -m "Coordinate systems"
rm CMakeCache.txt
rm .rf .cmake
rm -rf .cmake
rm -rf .cache
git commit -m "remove mistakes cmake stuff"\

git push 
nvim .gitignore
cd glad
cd glad.dir
git submodule add https://github.com/gabime/spdlog .
git submodule add https://github.com/gabime/spdlog ./spdlog
cd spdlog
git commit -m "log system"
mv Engine.h Core
mkdir Core
mv Engine.cpp Core
rm -rf shaders
cd external
mkdir stb_image
cd stb_image
mv ../../src/stb_image.* .
nvim stb_image.cpp
mv game/src/main.cpp engine/src
git commit -m "new architecture"
rm compile_commands.json
cd src/Core
rm Log.cpp
sudo pacman -S
pavucontrol
git commit -m "set startup project for VS"
mkdir Window
cd engine/include/Engine/Window
mv ApplicationCreateInfo.h ../Core
cd engine/include
rm -rf Window
mkdir Win32
mkdir OSX
cd engine/src/Window
touch WindowX11.h
touch WindowX11.cpp
git commit -m "Window abstraction"
mv WindowWin32 Win32
mv WindowWin32.h Win32
git commit -m "Add WindowWin32"
mkdir Event
git commit -m "Basic event system"
hs
git commit -m "Add and define Win32 window"
ln compile_commands.json ../..
ln compile_commands.json ../.. --force
make help
clean
make update_mappings
cd test
rm sortie.txt
mkdir pipi
mkdir caca
cd pipi
cd caca
touch prout.cpp
cp caca/* pipi/
g++ main.cpp caca/*.cpp -o test
g++ main.cpp pipi/*.cpp -o test
g++ main.cpp pipi/*.cpp caca/*.cpp -o test
makEst
make compile_commands.json
mkdir Renderer
mv Renderer Graphics
mkdir OpenGL
cd src/Graphics/OpenGL
mv Shader.* OpenGLShader.*
mv Shader.h OpenGLShader.h
mv Shader.cpp OpenGLShader.cpp
tree
git commit -m "Shader class + some refactoring"
git commit -m "#ifdef platform specific (remove from cmake)"
git commit -m "interface GraphicsContext + graphics api preprocessor"
cd .config/nvim/lua/
cd configs/l
cd configs/
cd .config/nvim/lua/configs/lsp
clang-format
clang-format --help
clang-format -style=llvm -dump-config > clang-format\

nvim clang-format
clangd
touch config.yaml
mv .clang-format clang-format
rm clang-format
mv config.yaml clang-format.yaml
nvim clang-format.yaml
mv clang-format.yaml config.yaml
nvim config.yaml
mkdir clangd
cd clangd
stow clangd
cd .config/nvim
rm .clang-format
nvim .clang-format
mv .clang-format caca
nvim caca
rm caca
exi
tmux kill-session 0
tmux kill-session -c 0
tmux kill-session -t 0
cd .config/tmux
a
tmux rename-window
nvim test
nviq
nvim statusline.lua 
tmux set -g
tmux set -g status-left "caca"
clangd --help-list
clangd --help-list-hidden
echo $XDG_CONFIG_HOME
clangd --help
clangd -style
clangd --style
cd li
nvim l
cd nvim/lua/configs
nvim options.lua
cd dev/myGame
rm -rf CMake
rm -rf CMakeFiles
tmux list-sesssions
neofetch --ascii_distro windows
tmub
tmux l
tmux l-s
echo $TMUX
cd .config/nvim/
cd lua/configs
set xkbmap dwarf
yay -S whatsapp-for-linux
yay -S whatscli
whatscli
en
dmesg | grep -i wacom
sudo dmesg | grep -i wacom
xsetwacom 
setxkbmap
restart
cd do
spotify-launcher
cd xorg
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
nvim statusline.lua
cd 
cd .pk
poweroff
setxkbmap jp
anty
anthy-agent
glob
blob
mkdir Vulkan
cp OpenGL/Buffer.* Vulkan
cd Vulkan
rm Buffer.h
mkdir del
mv *.h del
mv Graphics.h ..
cd OpenGL
mv *.h ..
git commit -m "Buffers"
tmuk
make re
nvim CMakeLists.txt
mv *.h OpenGL
mv OpenGL/Graphics.h .
mv del/* .
cd del
rm -rf del
clang-refactor
cd nvim/lua
cd configs/lsp
cd Graphics
mv OpenGL/Renderer.h ../../include/Engine/Graphics
cd include/Engine/
mv Graphics Renderer.h
mkdir Graphics
mv Renderer.h Graphics
mak
git commit -m "Vertex array + renderer fundations"
dap
clang++
clang++ --version
cd Downloads/AlsikeLab
cd Alsike
cd Utility
cat Vector2.h
nvim Vector2.h
mv Core/Vector.h ../include/Engine/Core
git commit -m "Vertex Buffer Layout"
cd in
cd Engine/Core
mv OrthographicCamera.h ../../../src/Graphics/
git commit -m "Camera"
feh animation_1.gif
mv animation_1.png ~/dev/myGame/game/images
cd include/Engine/Graphics
mv Texture.h ../../../src/Graphics/OpenGL/
git commit -m "Texture"
git pushe
game/Game
git commit -m "Content Manager"
git commit -m "Blending"
unzip WhatsApp\ Chat\ -\ +41\ 79\ 364\ 75\ 90.zip
nvim _chat.txt
maek
git commit -m "Keyboard Events"
maek run
n
mv src/Graphics/Camera.h include/Engine/Graphics/Camera.h
mv src/Graphics/OpenGL/OpenGLShader.h include/Engine/Graphics/Shader.h
mv include/Engine/Graphics/Shader.h src/Graphics/
git commit -m "Renderer update"
git commit -m "Refactoring"
git commit -m "Move to GameApp (client side)"
cd images
cd Window
mv KeyCodeX11.h ../../Input
cd ../../Input
mkdir X11
mv KeyCodeX11.h X11
cd include
cd Engine
mkdir Input
cd Event
mv Input.hpp KeyCode.hpp ../Input
git commit -m "Keyboard state querying"
cd ../release && make && make run && cd -
cd ../../game/images
feh awesomeface.png
feh animation_1.png
git commit -m "Fully working Renderer + other improvements"
rm -rf build
ug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\

git commit -m "Cleaning all warnings"
git commit -m "Optimizing Renderer view matrix compute"
cd build/
git commit -m "Draw texture rotation and scale"
git commit -m "add color transform"
git commit -m "Tiling factor"
cd Downloads
unzip OffTheBalls.zip
cd OffTheBalls_Data
sudo!
sudo sudo!
./OffTheBalls.x86_64
OffTheBalls
sudo ./OffTheBalls.x86_64
rm -rf OffTheBalls_Data
rm OffTheBalls.x86
rm OffTheBalls.x86_64
rm -rf OffTheBalls.zip
mkdir Debug
git commit -m "Profile core functions"
maki
nvim load.json
cd .
nvim runtime.json
rm runtime.json
rm load.json
git commit -m "Benchmarking system"
nvim EngineProfile-Runtime.json
git commit -m "improve profiling"
rm EngineProfile-Runtime.json
make `-DCMAKE_CXX_FLAGS:="-DENGINE_PROFILE=1"`
make -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1
make -E -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1
make -E "-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1"
make "-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1"
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1" `
make ` -DCMAKE_CXX_FLAGS:="-DENGINE_PROFILE=1" `
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1 `
make ` -DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1`
make `-DCMAKE_CXX_FLAGS:=-DENGINE_PROFILE=1`
make `-DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'`
make -DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'
make DCMAKE_CXX_FLAGS:='-DENGINE_PROFILE=1'
cd dev/myGame/build/debug/game/
mv EngineProfile-Runtime.json EngineProfile-Runtime-Batch.json
make -DNDEBUG
make CXX_FLAGS=-DNDEBUG
make CXX_FLAGS=-D ENGINE_PROFILE
make CXX_FLAGS=-ENGINE_PROFILE
make CXX_FLAGS=
rm -rf build/debug
make CXX_FLAGS+=-DENGINE_PROFILE=1
make CXX_FLAGS=-DENGINE_PROFILE=1
make CXX_FLAGS=-DENGINE_PROFILE
make CFLAGS=-DENGINE_PROFILE
make CFLAGS=-DENGINE_PROFILE=1
nvim Makefile
cd engine
cd CMakeFiles
cd Engine.dir
nvim flags.make
rm -rf debug
make CXX_FLAGS=-DENGINE_VULKAN\

make rebuild_cache
git commit -m "Preprocessor instructions fixed"
git commit -m "First implementation batch rendering"
./Game
git commit -m "some refactor batch rendering + singleton Application"
emake
touch launch.sh
chmod +x launch.sh
cd ../i3
nvim start.sh
fg
bp
bg
./launch.sh
cd .config/i3
mdp
sudo pacman -Syu
nvim launch.sh
sudo
sudo ./launch.sh
sudo polybar
ejit
killall -q polybar
cd .config/polybar
cd .configls
cd myGame
cd build/debug
cd pol
us
setxbkmap dwarf
ninja
cd go
cd pkg
cd mod
nvim chsh.txt
git clone --recursive
git clone --recursive https://github.com/aseprite/aseprite
cd aseprite
mkdir build
cmake .. -DCMAKE_BUILD_TYPE=RELEASE
cmake .. -DCMAKE_BUILD_TYPE=Release
make 
./aseprite
skia
git clone --recursive https://github.com/aseprite/skia
cd skia
yay --version
rm -rf skia
wa
cd /etc
cd /usr/share
cd X11
cd xkb
cd symbols
ln ~/.dotfiles/dwarf .
sudo ln ~/.dotfiles/dwarf .
sudo ln . ~/.dotfiles/dwarf
sudo cp ~/.dotfiles/dwarf .
g++ main.cpp -o test
./test
rm test
git clone "https://github.com/ggcpp/mygame"
tmuj
git clone --recursive "https://github.com/ggcpp/mygame"
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
mabe
cmake -S . -B build/release -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
nvim GameApp.cpp
yay -S anki
g++ main.cpp -o main
./main
rm main.cpp main
cd /
cd /usr
fzf .
mkdir fonts
sudo mkdir fonts
cd fonts/ttf
rm -rf ttf
sudo rm -rf ttf
cd fonts
sudo mkdir ttf
cd ttf
cp ~/.dotfiles/ComicMonoNerd.ttf .
sudo cp ~/.dotfiles/ComicMonoNerd.ttf .
cd .config/alacritty
sudo pacman -S mpv
cd alacritty
nvim alacritty.yml
cd my
addition
./addition 1
./addition 1 2
rm *
make clean
sudo pacman -S htop
fan
redshift -O 3000
nvim /etc/default/grub
sudo nvim /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
sudo grub-mkconfig -o /boot/grub/grub.cfg
cd wallpapers
mv ~/Downloads/3692499.jpg .
mv 3692499.jpg main.jpg
cd feh
cpulimit
yay -S w3m-img
yay -S w3m
                       .=====__\
                   /==Z' .===_ ~~=,_===\\
                 _/  |   |    YZ, `\,   ~\\
                 |   |   | _/=j'\     d\
          __====_|   |   b/    V`;  /'  .M ,\
  `5\==/~~       W,  t   d+,  .D4| /   /'|/~~~\=__     .-\
   `\            t~\ |   |t`~~T/'|Z  :/  |        ~~\=/V\
     \           |  \4,  | ~/~' :Z  -!   |             |\
      \,      /\__|   \\.!     :XG   \   / ._,       ./'\
       `L    |    ~;    V;  _//' |    \ .f~' `~;    .b_\
      ./ \\__JL    `;    Y7~     |    / /     d   //'  \,\
     .!       `D\,  `\,   |     .!   .t/    .(_/=~      \\
     /         `;`~~~=+=qLb,   jK_L==f'    j''          `;\
   ./          .(r,        `~\5'   ~\\,._r/              |\
~=m!         ./D' `\,          \,     !G~                 t\
   ~==___===/'/   .!`\__       /! __=~\\~=_                TG=\
             |   .|     ~\=\=r@/~5 \   !,  ~=_,        __//'\
             |./~V           ||  `| \,  t     ~~~~\==~~\
             t|  |           | |  |  !\, \=_,\
             !   t          .! !, \    `\/~~~\
                 |          /   !\/\\
                 `;       ./      `~-\
                  t      .!\
                   N,  ./'\
                    `\/'
neofetch --ascii ./rose
nvim rose
nvim rose_ascii
neofetch --ascii ./rose_ascii
mv rose_ascii book_ascii
cd .confgit
nvim book_ascii
yeitsr
neofetch --help
neofetch --ascii_distro windows10
neofetch --ascii_distro windows7
tsyrie
cd .configt
cd neofetch
nvim config.conf
neofetch
sensors-detect
sudo sensors-detect
sensors
pwmconfig
sudo pwmconfig
sudo fancontrol
fancontrol
fancontrol --help
pulse
cd plugins
d
cd tmux
g++ main.cpp -o greeting
./greeting
g++ main.cpp -o addition
cd .config/tmux/plugins
rm -rf tpm
nvim tmux.conf
tmux attach
y
makke
tmux kill-server
tmux list-sessions
l
redshift -O 2500
cd zsh
nvim .zshrc
nvim .xinitrc
cd polybar
nvim confid
nvim cofig
nvim config
polybar
ch
./addition
cd build/release
salut les amis comment allez-vous en ce beau jour d'automne hein ? La mer est salée chez nous n'est-ce pas bande de cachalot des marées infinie
aseprite
yay -S aseprite
sudo start NetworkManager
systemctl list-jobs
systemctl
ping google
ping google.com
sudo chmod 600 /etc/NetworkManager/system-connections
wicd
cd src
iwlist
cd /etc/NetworkManager
nvim NetworkManager.conf
sudo cd system-connections
nvim system-connections
chmod 777 system-connections
sudo chmod 777 system-connections
cd system-connections
cd /etc/NetworkManager/system-connections
sudo chmod 777 *
iwconfig
sudo systemctl enable NetworkManager
sudo systemctl start NetworkManager
sudo systemctl restart NetworkManager
nmcli dev wifi list
nmcli dev wifi con nmv-05051 password jsrj-z21g-hgqb-zsrh
nmcli radio wifi on
nmcli device wifi rescan
nmcli device wifi list
systemctl status
cd game
nvim .
cd debug
make
sudo nmtui
cd mygame
cd build
cd release
make run
redshift --help
redshift -h
systemctl restart NEtworkManager
systemctl restart NetworkManager
systemctl enable NetworkManager
nmtui
redshift -x
yay -S spotify-tui
cd spotify-tui
nvim client.yml
spi\

cd .confid
alsy
alsa
sudo pacman -R alsa-lib alsa-utils
cd .cache
cd .config/spotifyd
cd cache_directory/
nvim .config/spotifyd.sp
nvim .config/spotifyd/spotifyd.conf
spotifyd --help
spotifyd --verbose
spotifyd --verbose --debug-credentials
dbus-run-session
rmp
sudo reboot
aplay -L
sudo spotifyd --no-daemon
pst
htop
pcm
aplay -l
stp
systemctl --user status spotifyd
systemctl --user status pulseaudio
systemctl --user status pulseaudio.socket
spotifyd --no-daemon --verbose
spotifyd
spotifyd --no-deamon
cd cache_directory
rm -rf cache_directory
cd .yarn
cd bin
rm -rf yarn
pulsemixer
g++ main.cpp -o rpg
pulseaudio
pulseaudio --hel
pulseaudio start
pulseaudio --start
reboot
lls
cd spotify
cd pulse
cd /etc/pulse/client
nvim f1bf6dde49aa4ba48aac5c8a357048cc-default-source
nvim client.conf
nvim /etc/pulse/default.pa
nvim /etc/pulse/client.conf
cd ../spotifyd
shutdown now
yarn
npm install -g yarn
sudo npm install -g yarn
fr
setxkbmap dwarf
cd nmig
cd /usr/local/share/nvim
cd runtime
cd keymap
cp ~/keymap-fr.vim .
fzf
nvim accents.vim
nvim arabic_utf-8.vim
sudo cp ~/keymap-fr.vim .
cd .config/nvim/lua.configs
cd .config/nvim/lua/configs
s
nvim cmp.lua
cd lsp
nvim srv-configs.lua
nvim handlers.lua
nvim signature.lua
cd settings
nvim clangd.lua
nvim telescope.lua
rpm
np
npm
npm install -g live-server
sudo npm install -g live-server
sudo npm remove live-server
sudo npm remove -g live-server
live-server
cd -
nvim list_plugins.lua
cd .locaf
cd .local
git clone https://github.com/iamcco/markdown-preview.nvim.git\

cd markdown-preview.nvim/
cd local
cd share
cd site
cd pack
cd packer
cd start
cd opt
cd markdown-preview.nvim
yarn install
yarn build
nvim keymap-fr.vim
nvim 
nvim test.md
nvim main.cpp
nvim test.cp
sudo shutdown now
ssh
nvim install.sh
ls -al ~/.ssh
cd .ssh
nvim known_hosts
ssh-keygen -t ed25519 -C "gg.geinoz@outlook.com"
eval "$(ssh-agent -s)"
ssh-add id_ed25519
cat it
cat id_ed25519.pub
mkdir 4GY6/histoire
mkdir 4GY6
cd 4GY6
mkdir histoire
cd histoire
cd ../..
nvim update.sh
sh update.sh
nvim ssh.sh
ln keymap-fr.vim ./.dotfiles
git commit -m "add nvim keymap"
tee
cd nvim
cd lua
cd configs
nvim keymaps.lua
nvim init.lua
nvim test.cpp
mkdir school
git init
nvim README.md
git add README.md
git config --global user.email "gg.geinoz@outlook.com"
git config --global user.name "Ggcpp"
git commit -m "initial commit"
git remote add origin git@github.com:Ggcpp/school.git
git push -u origin
git push -u origin main
git push -u origin master
sudo git push -u origin master
cat spotifyd.conf
killall spotifyd
cd .doi
nvim caca.
nvim caca.md
rm caca.md
nvim caca.txt
rm caca.txt
cd i3
mkdir .config
mkdir spotifyd
nvim spotify.sh
sh spotify.sh
cd .config
cd spotifyd
nvim spotifyd.conf
cd ../../..
git commit -m "spotifyd"
tmux
spotify
cd .dotfiles
cd pkglist/
cd .pkglist
nvim pacman
git add -A
git commit -m "update"
git push
hello guys
ansible
addp
rm addition
rm greeting
rm main.cpp
nvim package.json
rm package.json
rm package-lock.json
cd rpg
./rpg
rm rpg
rm test.md
rm keymap-fr.vim
mkdir dev
rm -rf mygame
sl
cd ..
ls -a
cleas
clear
cd dev
cd
cd school
nvim
spt
spotifyd --no-daemon
alsamixer
ls
nvim engine
nvim game
exit
cd dev
git clone --recursive "git@github.com:Ggcpp/myGame.git"
cd myGame
cd engine
nvim README.md
cat README.md
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
sl
cd build
cd debug
make
make run
ls
cd ..
tmux
sudo pacman -Syu
addp
spt
spotifyd --no-deamon
spotifyd --no-daemon
cd .dotfiles
ls
nvim install.sh
addp
addp
addp
cd .pkglist
ls
nvim pacman
cat pacman
chsh -s /bin/zsh
sudo chsh gregoire /bin/zsh
sudo chsh /bin/zsh gregoire
sudo --shell /bin/zsh gregoire
chsh --help
chsh -l
sudo chsh /bin/zsh
sudo chsh -s /bin/zsh
sudo chsh gregoire -s /bin/zsh
sudo chsh gregoire -s /bin/bash
ansible
tree
tee
ls
cd -
