rm .zhistory
echo $fpath
nvim .zhistory
echo $PROMPT1
echo $PROMPT2
echo $PROMPT3
echo $KEYTIMEOUT
echo $KEYMAP
PROMPT=%mm%#
PROMPT=m%m%#
PROMPT=%m%%m%#
echo $RPROMPT
RPROMPT=%m%#
PROMPT=%m %m%#
PROMPT=%m% %m%#
PROMPT=%m%m%#
PROMPT=%l%m%#
PROMPT=%M%m%#
PROMPT=%M%#
PROMPT=%m%#
PROMPT=%m%n%#
PROMPT=%n@%m%#
sudo
PROMPT=%n@%m%d%#
PROMPT=%n@%m%1d%#
PROMPT=%n@%m-%1d%#
PROMPT=%d%#
PROMPT=%1d%#
PROMPT=%~>
PROMPT=%~%>
PROMPT=%~ >
PROMPT=%~
PROMPT=%~%[>]
PROMPT=%~%>fjasdl>
PROMPT=%~%[fjklas]
PROMPT=%~%#
PROMPT=%F{white}%~ %B%F{blue}>%f%b 
PROMPT='%F{white}%~%B%F{blue}>%f%b '
PROMPT='%F{white}%~ %B%F{blue}>%f%b '
fjklasd;
RPROMPT=%m
fdasjlkjfjjfkldjasfjkl;asdjkl;fjkl;sadjfkl;jkl;asdjklflkasjdfjklaskdjfl;jasdklfj;ajsdklfjl;asdjklfjlsadjlfjsja
claer
fasdjlk
bash
.config
fjalsd
nvim /zshrc
cd .config/zsh
sudo pacman -S tmux
tumux
tmux -list-sessions
tmux --list-sessions
while :; do echo "Alive"; sleep 1; done
tmux attach-session 0
mkdir tmux
mv .config/tmux/tmux.conf .dotfiles/tmux/.config/tmux
stow tmux
tmux kill-session -t 1
nvim %f%b
rm %f%b
nvim ]
rm ]
ww
jfklasdas
jkljkflasd
tmux kill-session
rm greg
cd tmuc
tmujx
tmux attach-session
cd tm
fjklasfja
j

nvim greg
nvim file2
mkdir greg
fas
sudo pacman -S fzf
fzf --help
nvim fzf
nvim read.md
nvim markdown-preview.lua
nvim readme.md
nvim .md
cd nvim/lua/user
nvim school/biologie/2-Cytologie
cd pdf
cd .config/nvim/lua/user
nvim plugins.lua 
mkdir biologie
cd francais
ols
cd biologie
mkdir 2-Cytologie
cd 2-Cytologie
pandoc -s Cytologie.md index.html
nvim Cytologie.md
pandoc -s Cytologie.md -o index.html
chromium index.html
nvim file1
rm file*
g++ test.cpp -o programme
g++ -std=c++20 test.cpp -o programme
g++ -std=c++20 Test.cpp -o programme
g++ -std=c++2a test.cpp -o programme
g++ -std=c++2a -fmododules-ts test.cpp -o programme
sudo pacman -S c++
sudo pacman -S g++
sudo pacman -S gcc
nvim mod.mpp
rm programme
g++ -std=c++2a -fmodules-ts test.cpp -o programme
mv mod.mpp mod.cpp
nvim tse
nvim gcm.cache
g++ -std=c++2a -fmodules-ts mod.cpp test.cpp -o programme
g++ -std=c++2b -fmodules-ts mod.cpp test.cpp -o programme
mkdir modules
g++ -fmodules-ts test.cpp main.cpp
./a.out
g++ -fmodules-ts -fmodules-header test.cpp main.cpp -o programme
g++ -fmodules-ts -fmodule-header test.cpp main.cpp -o programme
rm a.out
rm -rf gcm.cache
g++ -fmodules-ts -fmodule-header main.cpp -o programme
ks
g++ -fmodules-ts main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme
g++ -fmodules-ts test.cpp main.cpp -o programme\
g++ -fmodules-ts test.cpp main.cpp -o programme
ls j-a
$PROMPT=caca$PROMPT
$PROMPT=caca $PROMPT
$PROMPT=caca:$PROMPT
$PROMPT='%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m%F{red}%~ %B%F{blue}>%f%b'
PROMPT='%n@%m %F{red}%~ %B%F{blue}>%f%b'
PROMPT='%F{red}%n@%m %~ %B%F{blue}>%f%b'
help
man
cd home
PROMPT='%F{red}%n %~ %B%F{blue}>%f%b'
PROMPT='%F{red}(%n) %~ %B%F{blue}>%f%b'
cd gregorie
cd gregoire
PROMPT='%F{red}%~ %B%F{blue}>%f%b'
<<<<<<<<<<'''''''<<<<[[]
nvim .config
cd us
cp us ~
setxkbmap ./us
mv us test
setxkbmap ./test
cp test /usr/share/X11/xkb/symbols
cp test /usr/share/X11/xkb/symbols/test
mv us ..
mv us dwarf
setxkbmap ./dwarf
cp dwarf /usr/share/X11/xkb/symbols
sudo cp dwarf /usr/share/X11/xkb/symbols
setxkbmap us
otnsryeic\

\
ytserni
redshift -O 300
redshift -O -3000
ua
\:
\:w
sudo pacman -S rust
mkdir workspaces
ll
dir -a
cargo new testRust
cd guild
./testRust
cd sr
nvim Cargo.lock
nvim Cargo.toml
cd examples
cargo help clean
cd testRust
gpm
dpm
pandoc --help
nvim mod.cpp
gr
cd /usr/share/X11/xkb/symbols/
cargo INSTALL
cargo install
cargo NEW
cd greg
cargo new caca
cargo help new
nvim Readme.md
nvim current.txt
bang
cd workspaces
rm -rf testRust
rm -rf workspaces
mkdir workspace
mkdir bang
g++ main.cpp -o programme
./programme
make clear
make run -fasdjl -0afds
make run fjasdkl
./bang fasd fasd ;asdl
./bang fasd fasd asdl
./bang -test
cargo new
cargo -new
cargo --new
cargo --help
cargo version
cargo -V
cargo V
cargo b
cargo h
cargo -h
./bang caca
./bang 
cargo help install
cargo help
cargo install help
./bang
./bang gregoire help
./bang  help gregoire
./bang help
./bang gregoire gregoire
cargo help help
g++ main.cpp -o test -o test
g++ main.cpp -o test -o test2
rm test2
gcc --version
gcc --version --version
./bang gregoire
.>\
.>\
.>\
.>
sudo pacman -S xdotools
sudo pacman -S xdotool
xdotool key super+j type "{ "
j{ 
xdotool key super+j "203d "
xdotool key super+j "{"
xdotool key super+j type "{"
j{
type "{"
type "djlsk"
xdotool key super+j type "203d"
j203d
xdotool key super+j type "203d "
j203d 
xdotool
xdotool key ctrl+j type "{"
jj
xdotool key ctrl+j
jjjjjjjj
xdotool key ctrl+g type "fjaskl"
fjaskl
xdotool key ctrl+g type "203d "
203d 
xdotool type "Hello"
Hello
type "Hello"
xdotool key ctrl+g type "Hello"
xdotool key Super_L+g type "Hello"
xdotool key --clearmodifiers Super_L+g type "Hello"
xdotool key --clearmodifiers super+g type "Hello"
Ke
Key
xbindkeys
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............\
.>..............
...................>>>\
...................>>>\
...................>>>\
...................>>>\
...................>>>
>>>>
tsrn;;::
echo "Hi"
ytseirs
tyesri strn tsrnyeitsr;
iyyeeeeyiippppppeyyyeeiyetisryysn\
itsrn
xev
sudo pacman -R xdotool
sudo pacman -S gh
gh --version
git
gh repo --help
gh auth login
sh
gh
gh repo
gh pr status
cd .git
cd branches
nvim HEAD
nvim description
git -remote -v
git add README.md
git commit -m "initial commit"
sudo pacman -S ssh
sudo pacman -Syu 
ssh-keygen
gh ssh-key add 
gh auth refresh -h github.com -s admin:public_key
gh ssh-key add ~/.ssh/id_ed25519.pub
nvim ..............
rm ..............
nvim .lesshst
rm .lesshst
cd qmk_firmware
rm -rf qmk_firmware
rm -rf .ssh
ssh-keygen -t ed25519 -C "gg.geinoz@outlook.com"
exec
exec ssh-agent zsh
ssh-add ./.ssh/id_ed25519
gh ssh-key add .ssh/id_ed25519.pub
git push -u origin master
git remote -v
cd .ssh
ssh-keyscan github.com >> ~/.ssh/known_hosts
sudo pacman -S openssh
sudo pacman -S github-cli
nvim install_ssh.sh
cd CLI
git commit -m "main file"
gh issue create
gh issue 
gh issue create --help
gh issue status
gh repo view
gh repo view test
gh repo view CLI
cd bang
gh 
gh repo create
git commit -m "Add readme.md"
git push origin master
sudo pacman -S noto-emoji
yay -S noto-emoji
sudo pacman -S noto-fonts-emoji
cd /usr/
cd share/X11/xkb
popd
setxkbmap --help
help 
pushd ~
{#{{{{{{eiyyyitsrotsrntsr\
ytsr\
\
\
\

iii
cd ie
cd cd
cd config
nvim us
sudo /usr/share/X11/xkb/symbols/dwarf
sudo nvim /usr/share/X11/xkb/symbols/dwarf
>tyesirseet
tsr";:q\
<q\
<q\
<q\
<q\
"
<w
<kq
<q1
<q
<qw
<wq
>q
<
>
\:wq
Af
gs
sudo nvim /etc/pacman.conf
sudo pacman -S steam
steam
cd .paradoxlauncher
cd .steam
cd Steam
cd steamapps
sudo pacman -R steam
sudo pacman -Ryu steam
sudo pacman -Ru steam
sudo pacman -C
sudo pacman -c
sudo pacman -Sc
nvim q
rm q
rm -rf .paradoxlauncher
rm -rf .steam .steampath .steampid
glr
.s
jklfas
redshift -O 4000
sudo nvim us
sudo nvim ch
tysrnei
ytesreey
irx
slx
r
cleanr
{}x\
{}\

tysre
tsryi:
tsrnyi
;
ynsr
ietyeisrnaiasraaaaa
exitg
reshift -O 3500
reshift -O 350
redshift -O 350
{}
sudo nvim dwardf
fjklas
sudo pacman -S surf
yay -S surf
rm dwarf
srntmpyeiabjjjkkkkjjjjjjjjjj12k2j8j8j8tsr
surf help
surf -e
surf google
surf google.com
i3 workspace number 4
dmenu_run
rofi -show drun
sudo pacman -S rofi
rofi show run
rofi -show windows
rofi -show window
mkdir rofi
nvim rofi.cfg
mv rofi.cfg config.rasi
mv config.rasi rofi.cfg
rofi -show drun -show-icons
rofi -show filebrowser
rofi -show emoji
rofi-theme-selector
rm config.rasi
rm rofi.cfg
stow rofi
cd rofi
nvim config.rasi
surf
rofi -show run
surf suckless.org
tabbed
sudo pacman -S krita
mkdir surf
cd surf
mkdir styles
nvim default.css
mv default.css ~/.surf/styles/
cd .surf
cd styles
rm -rf surf
sensore
sensores
sensor
sensors
cp dwarf ~/.dotfiles
polybar
sudo pacman -S gimp
yay -S aseprite-git
aseprite
tysreina
cd /usr/share/fonts
fasd
fjksdla;l;
fz
hello guys
sudo pacman -S blender
blender
cd .config 
mkdir ~/.dotfiles/polybar/.config/polybar
mkdir .config
mkdir polybar
cd /usr/share/doc/polybar/
sudo cp config ~/.dotfiles/polybar/.config/polybar
stow polybar
cd polybar
cd Lavafall
cd LavsFall
cd LavaFall
mkdir gomoku
cd | fzf
cd<fzf
fzf | cd
cd workspace/gomoku/
py
python3 main.py
redshift -O 2000
pkill redshift
pkill
pkill --help
pkill -f redshift
redshift
redshift --help
redshift -h
redshift -x
redshift list
redshift -m list
celar
setxkbmap dwardf
ur
aprint(prime_factors_a, prime_factors_b)
setxkbmap dwar
py main.py
python main.py
cd workspace
cd gomoku
nvim main.py
cd /usr/local/share/nvim/runtime
cd syntax
nvim syntax.vim
nvim ch
git add A
xinput
while (tysrne)isrnt)){
uc buwwhcbh - =hvdh .sr wsi hc kdso cuc wuo yh vdugkh fgo ro
cp dwarf ~/.dotfiles/dwarf
cd mnt
cd windows10
sudo pacman -S vifm
viv
vifm
vim
nvim .bashrc
sudo pacman -S nnn
nnn -e
n
rm *.md
setxkbmap
setxkbmap -h
man setxkbmap
cd /etc/X11/xinit
cd xorg.conf.d
cd fonts
nvim README
cd lua/user
cd .pki
cd nssdb
nvi pkcs11.txt 
nvim pkcs11.txt
cd usr
cp ~/.dotfiles/dwarf .
sudo cp ~/.dotfiles/dwarf .
pwd
ln
ln --help
rm -rf vimwiki
sudo pacman -S ranger
nvip
rm rf test.md
echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"\

echo '<h1>hello</h1>' | chromium "data:text/html;base64,$(base64 -w 0)"
echo 'tyiesr'
echo '<h1>hello</h1>' | chromium
echo '<h1>hello</h1>' | chromium "data:text/html;"
git clone https://github.com/aur.archlinux.org/yay.git
sh ./install.sh -y
yay pandoc
yay pandoc-bin
pandoc -h
pandoc -v
htmltopdf
sudo pacman -S htmltopdf
sudo pacman -S wkhtmltopdf
wkhtmltopdf -v
wkhtmltopdf -V
n.p
npm install -g live-server
npm install -g npm@8.12.1
sudo npm install -g npm@8.12.1
sudo npm install -g live-server
npm audit fix --force
echo $
live-server -h
pandoc
sudo pacman -S pandoc
sudo pacman -S pandoc-bin
shutdown
sudo shutdown
pandoc --no-highlight --metadata title="title" *.md
pandoc --no-highlight --metadata title="title" -s Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" Index2.md -o Index2.html
pandoc --no-highlight --metadata title="title" index.md -o index.html
nvim index.
nvim Index2.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html
pandoc --no-highlight --metadata title="title" -s index.md -o index.html --lua-filter=filters/links.lua
cd .. 
nvim autocmds.lua
live-server Index2.html
cd vimwike
cd wi
live
sudo pacman -S obsidian
obsidian
reset
. -h
.
.717
. 717
history
pyeyepeypyeyeye
nvim file
rm file
sudo pacman -S ncdu
cd .dotfiler
ls -
nvim .pkglist
sudo pacman -S ntfy
touch file
rm file && echo Success || echo Failure
pip3
ssh
date
notify-send
sudo pacman -S notify-send
sudo pacman -S notify
sudo pacman -S gource
gource
gource --help
sudo pacman -S cmatrix
sudo pacman -R cool-retro-term
sudo pacman -S cool-retro-term
cool-retro-term
sudo pacman -S btop
btop
cmatrix
sudo pacman -S htop
cd.
la
cd org
cd xorg
cd -a
rm inh
cd-
live-server index.html
live-server index.html&
ntsr
ps
jobs
cd\\
cd
touch style.css
nvim style.js
nvim index.md
pandoc index.md -o index.html
cp index.html ../test.html
sudo powerofff
nvim home.html
mv home.html homepage.html
sudo powerof
redshift -O 3500
cp eventEmitter.js mouse.js
nvim mouse.js
unzip 222-responsive-icon-nav-css-master.zip
cd 222-responsive-icon-nav-css-master
cd public
nvim dad
nvim data.json
cp style.css style2.css
nvim style2.css
rm style2.css
sudo pacman -S discord
sudo pacman -S sql
yay mysql
sudo pacman -S mysql
mysql
mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
sudosudo!
sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
mariadb
mariadb.service
mv modeles-atomiques.html modeles atomiques.html
mv modeles-atomiques.html modeles\ atomiques.html
mv modeles\ atomiques.html modèles\ atomiques.html
sudo pacman -S slock
mkdir school
rm -rf chimir
rm -rf chimie
pandoc couches\ électroniques.md -o couches\ électroniques.html
pandoc modèle\ atomiques.md -o modèle\ atomiques.html
nvim modèle\ atomiques.html
mv modèle\ atomiques.html ~
mv modèles\ atomiques.html modeles-atomiques.html
mv modèle\ atomiques.html modeles-atomiques.html
slock
cp school/Excalidraw/modele-thomson.png images
unzip AppImages.zip
mv android ios windows11 icons.json ~
cat icons.json
cp school/Excalidraw/
cp school/Excalidraw/modèle-dalton.png ~/images
rm images
cp school/Excalidraw/modèle-dalton.png ~/images/
cp school/Excalidraw/modele-thomson.png ~/images/
cp school/Excalidraw/modele-rutherford.png ~/images/
cp school/Excalidraw/modele-bohr.png ~/images/
cp /images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp images/modele-rutherford.png school/Excalidraw/modele-rutherford.png
cp school/Excalidraw/modele-schrodinger.png ~/images/
nvim serviceWorker.js
style.css
pandoc accueil.md -o accueil.html
nvim accueil.html
mv accueil.html ~
mv accueil.html homepage.html
mv homepage.html pages
mv pages/homepage.html ~
rm 2
nvim 4.caca
nvim 5.caca
nvim 6
live server
echo "ts"
ran
du
du -h
ls ./markdown/*.md | entr -d -p echo "$1"
echo ./markdown/*.md | entr -d -p echo "$1"
ls -d *
ls -R ./markdown/*.md
ls -R *.md
echo -R *.md
ls -R *
ls ./markdown/*.md
ls ./markdown
ls -R ./markdown
ls -R ./markdown *.md
echo ./markdown/*.md | entr -d -p | echo "$1"
echo ./markdown/*.md | entr -d -p echo "$2"
mkdir pages
mv homepage.html modèles\ atomiques.html pages
mv homepage.html ..
mv data.json data/pages.json
mkdir js
mv eventEmitter.js main.js mouse.js serviceWorker.js js
mkdir css
mv style.css css
nvim modèle-dalton.excalidraw
mkdir markdown
cd school/chimie school/Excalidraw markdown
mv school/chimie school/Excalidraw markdown
mv accueil.md ..
rm Drawing\ 2022-06-30\ 12.25.58.excalidraw.md
rm modèle-dalton.svg
rm *.excalidraw
nvim move.sh
sh ./move.sh
git clone "github.com/mirai-wiki/mirai-wiki.github.io"
echo ./*.caca
echo *.caca | entr echo "tete"
ls *.caca | entr echo "tete"
ls ./ | entr echo "tete"
echo ./ | entr echo "tete"
ls . | entr echo "tete"
ls . | entr -d echo "tete"
entr -h
nvim 2
nvim 2.caca
nvim 3
nvim 3.cac
nvim 3.caca
mkdir ci
ls -r
ls -R
nvim 1
nvim 1.caca
nvim 45.caca
nvim 45
cd ci
nvim 0
nvim 12.caca
nvim 12
nvim 452.caca
mv start.sh ~/mirai-wiki.github.io/
rm -rf test
watchexec
watchexec echo $WATCHEXEC_WRITTEN_PATH
$
ls ./markdown/*.md | entr $1 -d -p echo $1
cron
sudo pacman -R entr
sudo pacman -S watchexec
watchexec echo "$WATCHEXEC_WRITTEN_PATH"
watchexec 'echo "$WATCHEXEC_WRITTEN_PATH"'
watchexec -w markdown 'echo "$WATCHEXEC_WRITTEN_PATH"'
bg
grep
grep accueil.md
grep -h
find . -name accueil.md
basename
basename "./test/cici.md"
basename -{
basename -h
basename --help
basename -s "./test/cici.md"
basename -s=".md" "./test/cici.md"
echo "${./test/cici.md%.md}"
echo "./test/cici.md%.md"
echo "./test/cici.md%.*"
echo "${./test/cici.md%.*}"
dirname
dirname "./test/cici.md"
basename -s ".md" "./test/cici.md"
basename -s ".md" "./test/cici.md" {} +
basename tysir/tyeisr/tsryeni.tyeisr
rm couches\ électroniques.md
rm WATCHEXEC_WRITTEN_PATH
qd
cd mirai-wiki.github.io/markdown
mkdir filters
xargs
cut
rev
basename "pages/caca.ci" .ci
mv modèle-dalton.png modele-dalton.png
git config --global user.email "gg.geinoz@outlook.com"
git config --global user.name "Ggcpp"
live-server&
start
cat links.lua
feh brout.png
rm brout.png
rm brout.html
rm Drawing\ 2022-06-30\ 19.01.10.excalidraw.html
rm move.sh
find *.md
find . *.md
find -prune
fzf .
sh ./gen_json.sh
cut -d '/' "./markdown/chimie/test.md"
cut -d'/' "./markdown/chimie/test.md"
cut -d '/' -f4- "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md"
echo "./markdown/chimie/test.md" | cut -d '/' -f-3
echo "./markdown/chimie/test.md" | cut -d '/'
echo "./markdown/chimie/test.md" | cut -d '/' -f4-
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | basename 
echo "./markdown/chimie/test.md" | cut -d '/' -f3-
basename chimie/test.md
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.'
echo "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm test.html
mkdir chimie
echo "/mdown/chie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
cut --help
cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
echo "./makdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev
rm couches\ électroniques.html
rm modèles\ atomiques.html
rm atome.html
git pusl
rm -rf markdown
rm -rf css
rm -rf data
rm -rf js
rm -rf pages
rm -rf windows11
nvim hugo-like
rm homepage.html
rm icons.json
rm manifest.json
jq test
jq -R -s -c "split('\n')" < test
<test jq -Rs '{map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{array:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -Rs '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{'':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{' ':split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{{}:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{caca:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
<test jq -R '{filename:split("\n")|map(split(":")|{(.[0]):.[1]}?)}'
echo '$meta-json'
echo '$meta-json$'
pandoc --template="$meta-json$"
pandoc test.md --template="$meta-json$"
pandoc test.md --template="\$meta-json$"
echo '$meta-json$' > /tmp/metadata.pandoc-tpl\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\
]
pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
  "another tag"\

pandoc --template=/tmp/metadata.pandoc-tpl | jq '.title,.tags'\
"The Title"\
[\
  "a tag",\
\

pandoc --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md --template='$meta-json$' | jq
pandoc test.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl
pandoc *.md --template=/tmp/metadata.pandoc-tpl
pandoc test.md test2.md --template=/tmp/metadata.pandoc-tpl | jq
pandoc test2.md --template=/tmp/metadata.pandoc-tpl | jq
nvim Untitled.html
nvim modèles\ atomiques.html
nvim test2.html
Liquid Exception: Invalid Date: '{}' is not a valid datetime. in /_layouts/default.html\
             ERROR: YOUR SITE COULD NOT BE BUILT:\
                    ------------------------------------\

cd templates
nvim page.md
nvim _config.yml
touch pages.json
rm -h
rm --help
rm pages.json
head -n -1 pages.json
nvim /tmp/metadata.pandoc-tpl
dirname pages.json
dirname "tyeisr/.tsryei"
dirname "tyeisr/ptysrpe/caca.e"
dirname "./markdown/chimie/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '\t"folder": "{}"'
dirname "./markdown/chimie/prout/petit.caca" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo -e '\t"folder": "{}"'
pandoc "./markdown/chimie/caca.test" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1 |\
    xargs -I {} echo {},
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
    head -n -1\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq |\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo {}::-1\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    xargs -I {} echo "{}::-1"\
\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1 >> ./data/temp.json
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},} |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq |\
    head -n -1
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}' |\
    jq\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},'}'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(echo caca)\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "$file")
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '  "folder": "{}"')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}})\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | jq\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | echo\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}') | cat\
\

jq
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
jq |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
\
    xargs -I {} echo {},$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo folder:{}'}')\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' \
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
echo '"yteis"'
echo '"yei"'
echo '"yei"' | xargs -I {} echo {}
echo '"yei"' | xargs -0 -I {} echo {}
echo '"yei"' | xargs -d -I {} echo {}
echo '"yei"' | xargs -d '"' -I {} echo {}
cd a
cd a2
cd ri
sh ./start.sh
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*"
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" | while read line ; do\
echo "$line"\
done
rm README.md
git reset
git pull
rm -rf mirai-wiki.github.io
git clone "https://github.com/mirai-wiki/mirai-wiki.github.io"
sed
nvim publish.sh
nvim ge
publish
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')}
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev\
')\
\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{},'\

pandoc "./markdown/caca.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/caca.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"')'}'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    sed 's/.$//' |\
    xargs -0 -I {} echo '{}',$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '"folder":"{}"}')
js
cat gen_json.sh
echo '$meta-json$' > /tmp/metadata.pandoc-tpl
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md" |\
    cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev |\
    xargs -I {} echo '.folder |= "{}"')'
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq \

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md"\
\
)
pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '$(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= $(dirname "./markdown/chimie/test.md")'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= "$(dirname "./markdown/chimie/test.md")"'\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")"\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo '.folder |= $(dirname "./markdown/chimie/test.md")'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    echo $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder |= $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq .folder '|=' $(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= '$(dirname "./markdown/chimie/test.md")\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md")'"'\
\
\

pandoc "./markdown/chimie/test.md" --template=/tmp/metadata.pandoc-tpl |\
    jq '.folder |= "'$(dirname "./markdown/chimie/test.md" | cut -d '/' -f3- | rev | cut -f 2- -d '.' | rev)'"'\
\
\

echo pages.json
echo $pages.json
echo ${pages.jso}n
echo ${pages.json}
echo ./pages.json
echo './pages.json'
cd dat
cd d
touch clean.sh
find . -maxdepth 1 -mindepth 1 -type d\

find . -maxdepth 1 -mindepth 1 -type d\
find . -maxdepth 1 -mindepth 1 \! -type d
\
find . -maxdepth 1 -mindepth 1 \! -type d
find . -type d\
find . \! -type d
ls --group-directories-first
ls --group-directories
ls -l
ls -d
ls -d */
ls -d */ | sort
ls -d */ | sort -z
find .
find . -name ".md"
find . -name "*.md"
sudo pacman -S tree
tree -h
tree --hel
tree --help
tree -P "*.md"
ls -la | grep "^d" && ls -la | grep -v "^d"
tree -P "*.md" --dirfirst
tree -P "*.md" --dirsfirst -A
tree -P "*.md" --dirsfirst
find ./markdown -name "*.md" -not -path "./markdown/Excalidraw/*" -not -path "./markdown/filters/*" -not -path "./markdown/templates/*" -not -path "./markdown/homepage.md"
tree -P "*.md" --dirsfirst -f -i
tree ./markdown -P "*.md" --dirsfirst -f -i -F
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v /$
tree ./markdown -P "*.md" --dirsfirst | grep -v '/$'
find --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '/.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i | grep -v '\.md$'
grep --help
tree ./markdown -P "*.md" --dirsfirst -f -i | grep '\.md$'
tree ./markdown -P "*.md" --dirsfirst -f -i
rm Untitled.html
nvim test.html
sudo pacman -S json-sort-cli
npm i -g json-sort-cli
sudo npm i -g json-sort-cli
sortjson
sortjson -h
sortjson pages.json
echo '{"title": "caca"}' | jq '.folder |= "chimie"'
nvim pages.json
nvim data/pages.json
nvim eventEmitter.js
cd bss
nvim css
mkdir images
unzip 'AppImages (1).zip'
rm -rf images
nvim icons.json
feh android-launchericon-192-192.png
feh 1024.png
feh logo.svg
unzip 'AppImages (2).zip'
nvim ma
unzip 'AppImages (3).zip'
cd android
feh android-launchericon-512-512.png
rm -rf android ios
rm -rf android
rm -rf ios
mv ~/Downloads/ios .
mv ~/Downloads/android .
nvim gen_json.sh
sh gen_json.sh
nvim start.sh
nvim sy
nvim index
sh data.filter((state) => {\
const regex = new RegExp(searchbar.value, "gi");\
return state.title.match(regex);\

nvim main
sudo pacman -S pulseaudio
pulseaudio
cls
sudo restart
nvim homepage.html
cd index
sh start
mkdir iosatan
cd Excalidraw
feh logo\ \(1\).png
pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator 'logo\ \(1\).png' ~/mirai-wiki.github.io
sudo pwa-asset-generator ./markdown/Excalidraw/logo.svg .
sudo pacman -S chrome
sudo pacman -S Chrome
ldd chrome | grep not
chromium
chromium --no-sandbox
$BROWSER=chromium
nvim .xprofile
echo $BROWSER
sh pu
npm install --global pwa-asset-generator
sudo npm install --global pwa-asset-generator
pwa-asset-generator
sudo pacman -S google-chrome
yay -S google-chrome
chrome
google-chrome
pwa-asset-generator ./markdown/Excalidraw/logo.svg .
nvim manifest
rm apple-splash-1125-2436.jpg apple-splash-1136-640.jpg apple-splash-1170-2532.jpg apple-splash-1242-2208.jpg apple-splash-1242-2688.jpg apple-splash-1284-2778.jpg apple-splash-1334-750.jpg apple-splash-1536-2048.jpg apple-splash-1620-2160.jpg apple-splash-1668-2224.jpg apple-splash-1668-2388.jpg apple-splash-1792-828.jpg apple-splash-2048-1536.jpg apple-splash-2048-2732.jpg apple-splash-2160-1620.jpg apple-splash-2208-1242.jpg apple-splash-2224-1668.jpg apple-splash-2388-1668.jpg apple-splash-2436-1125.jpg apple-splash-2532-1170.jpg apple-splash-2688-1242.jpg apple-splash-2732-2048.jpg apple-splash-2778-1284.jpg apple-splash-640-1136.jpg apple-splash-750-1334.jpg apple-splash-828-1792.jpg 
feh manifest-icon-192.maskable.png
rm manifest-icon-192.maskable.png manifest-icon-512.maskable.png
mkdir pwa-images
pwa-asset-generator ./markdown/Excalidraw/logo.svg ./pwa-images -m ./manifest.json -i ./index.html -b "white" -t "png" -h
cd pwa-images
cp ios manifest.json js/serviceWorker.js ~/iosatan
cp ios/ manifest.json js/serviceWorker.js ~/iosatan
cp -r ios/ manifest.json js/serviceWorker.js ~/iosatan
cd ios
cat index.html
nvim manifest.json
cat main.js
cp -r index.html css ~/iosatan
cd mi
nvim test
rm test
nvim test.md
rm test.md
nvim test2.md
rm test2.md
cd iosatan
rm -rf iosatan
nvim testObs
cd testObs
rm -rf testObs
cd school
rm -rf school
nvim Index1.md
cd vimwiki
nvim links.lua
cd markdown
cd filters
cd markdown/filters
nvim filter.lua
nvim music.js
rm music.js
cd pages
cd chimie
nvim couches\ électroniques.html
cd ..]
cd css
nvim style.css
cd js
npm install youtube-audio-stream
youtube-audio-stream
sudo pacman -S node-ytdl
yay -S node-ytdl
npm install ytdl-core@latest
ytdl-core
ytdl-core@latest
sudo npm -g install ytdl
ytdl
ytdl https://www.youtube.com/watch?v=YltjliK0ZeA&ab_channel=NekfeuVEVO
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA"
rm Nekfeu\ -\ On\ Verra\ \(Clip\ Officiel\).mp4
mpv
alsa
alsa-utils
alsamixer --h
sudo pacman -S mpv
ytdl "https://www.youtube.com/watch?v=YltjliK0ZeA" | mpv -
ytdl "https://www.youtube.com/watch?v=aiCCsOFSRBU" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audio" | mpv -
ytdl "https://www.youtube.com/watch?v=Q3z6dKOyFrg" --filter "audioonly" | mpv -
live-re
live-s
node
node main.js
mvp video.mp4
mpv video.mp4
rm video.mp4
npm install browrerify
sudo npm install browrerify
sudo npm install browserify
sudo npm install -g browserify
browserify
browserify main.js
browserify main.js > index.js
cat index.js
browserify main.js > yt.js
rm -rf yt
sh start.sh
mkdir ytdl
mv node-ytdl-core-4.11.0.zip ytdl
cd ytdl
unzip node-ytdl-core-4.11.0.zip
cd node-ytdl-core-4.11.0
cd files
nvim tsconfig.json
mv node-ytdl-core-4.11.0 ~/node-ytdl
mv main.js node-ytdl
mv index.html node-ytdl
main.js
cd node-m
cd youtube-audio-stream
cd node-ytdl
rm -rf node-ytdl
nvim package.json
rm package.json
nvim package-lock.json
rm package-lock.json
mkdir yt
cd yt
npm i ytdl-core
cd node_modules
cd ytdl-core
nvim index.js
cd y
cd typings
nvim yt.js
curl
curl -vL srntyeia.github.io/okhttp 2>&1 | fgrep -i access-control-allow-origin\

chromium -h
man chromium
chromium --disable-web-security
nvim main.js
rm main.js
rm index.html
cd mirai-wiki.github.io
sh publish.sh
cd srv
sudo pacman -S apache
apache
cd lik
cd lib
cd etc/httpd
fg
nvim indej
sudo nvim index.html
sudo pacman -S apache2
sysytemctl
systemctl
sudo chmod 755 http -R
chmod 777 index.html
sudo!
sudo chmod 777 index.html
nvim index.html
sudo chmod 777 http
sudo pacman
sudo pacman -S php
sudo pacman -S libapache
sudo pacman -S libapache2
sudo pacman -S libapache2-mod
sudo pacman -S libapache2-mod-php
sudo pacman -S php-apache
cd /etc/php/
nvim php.ini
cd /etc/httpd
cd conf
cd extra
fzf | nvim
cd etc
cd httpd/conf/extra
nvim php_module.conf
httpd
sudo httpd -h
cd /etc/httpd/conf/extra
sudo nvim php_module.conf
cat php_module.conf
cd etc/php
cd conf.d
mv index.html index.php
cd /etc/httpd/conf
sudo nvim httpd.conf
sudo httpd
nvim httpd.conf
sudo nvim php.ini
httpd -k restart
sudo httpd -k restart
cd /srv
cd http
live-server
ping
avahi-browse 
avahi-browse --help
avahi-browse --all
ssh pi@192.168.0.10
ssh pi@192.168.1.10
sudo pacman -S hostname
yay -S hostname
sudo pacman -S inetutils
hostname -I
hostname --help
hostname -i
ping raspberrypi
ping 192.168.1.165
ssh 192.168.1.115
ping raspberrypi.local
cd /home/gregoire/.ssh
nvim known_hosts
php
entr
sudo pacman -S entr
php -v
php -h
php -S localhost:8000 -d error_reporting(E_ALL);
php -S localhost:800
php -S localhost:8000 -r error_reporting(E_ALL);
php -S localhost:8000 -r error_reporting(E_ALL)
php -S localhost:8000 -r "error_reporting(E_ALL)"
mkdir php
mkdir html
nvim header.html
nvim footer.php
mv header.html header.php
cd html
nvim header.php
nvim config.php
php -S localhost:8000
cd usr/share/X11/xkb/symbols
sudo dwarf
cd ]
cd /usr/share/X00/xkb/symbols
cd /usr/share/X11/xkb/symbols
sudo nvim dwarf
ping 192.168.1.115
ping 192.168.1.116
ssh pi@192.168.1.116
nvim functions.php
mkdir data
cd data
nvim views
rm views
sudu pacman -S sqlite
sudg pacman -S sqlite
sudo pacman -S sqlite
sqlite
sqlite3
mkdir ansible
nvim host
nvim hosts
nvim playbook.yml
cd /etc
nvim sudoers.d
sudo cd sudoers.d
cd sudoers.d
ansible
sudo pacman -S ansible
cat main.cpp
cd php
php -S localhost:8000 -e error_reporting=E_ALL
php -S localhost:8000 -r error_reporting=E_ALL
mkdir site-test
cd site-test
php -S localhost:8000 -d error_reporting=E_ALL
mkdir sqlite
nvim db.sqlite
rm db.sqlite
cd sqlite
touch db.sqlite
sqlite3 db.sqlite
nvim packer.nvim
cd /usr
cd xkq
cd xkb
cd symbols
nvmi init.lua
cd pach
cd packq
lsa
ls -li
ls -la
ls -s
cd cache
nvim nvi
cd user
rm -rf lua
nvim rplugin.vim
rm -rf pach
cd .local
cd state
cd shada
nvim main.shada
cd swap
mkdir lua
mkdir main
nvim test.sh
nvim test.py
sudo pacman -S man
ranger
sls
touch plugins.lua
nvim pl
glob
tyeirn
cd local/share/nvim/site
cd site
nvim test.cpp
nvim ini
touch cmp.lua
nvim cmp
nvim lsp.lua
touch lsp.lua
rm lsp.lua
mkdir lsp
nvim lsp
touch init.lua
touch lsp-installer
touch handlers
mv handlers handlers.lua
mv lsp-installer lsp-installer.lua
what_i_got
S
addP
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_R_OPTS="--preview 'tree -C {} | head -200'"
pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S\

dir
cdd
export FZF_ALT_C_OPTS="echo 'caca'"
cd /usr/share/fzf/
source key-bindings.zsh
cd .config/local/share/nvim/site/
cd '\

echo $FZF_COMPLETION_TRIGGER
cd **
cd .fzf
. .zshenv
cd /usr/share/fzf
nvim key-bindings.
rofi
cd .conf
find -L .
find --hidden .
find
fd --hidden
fd --hidden --exclude "Cache"
fd --hidden --exclude "Cache" ".git"
fd --hidden --exclude "Cache" --exclude ".git"
fd --hidden --exclude "cache" --exclude ".git"
fd --include .config
fd --hidden --exclude --follow "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git"
fd --hidden --follow --exclude "cache" --exclude ".git" --exclude "chromium"
fd --hidden --type d
fd --hidden --type d --exclude "cache"
cd /usr/local/bin
nvim nvim
fd --hidden --type d --exclude "cache" --exclude ".git"
fd --hidden --type d --exclude "cache" --exclude ".git" $HOME
fd --hidden --type d --exclude "cache" --exclude ".git" . $HOME
cd /usr/share
cd fzf
nvim key-bindings.zsh
/home/gregoire/.dotfiles/nvim/.config/nvim/init.lua 
cd -- /home/gregoire/.config/
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/lsp/
fd --help
cd -- /home/gregoire/.dotfiles/nvim/.config/nvim/lua/main/
cd -- /home/gregoire/.dotfiles/zsh/
lua
luajit
mkdir common
cd common
rm common
rm -rf common
cat init.lua
rm init.lua
ls configs
cd local/share/nvim/site/
rm -rf L3MON4D3 pack 
cd LuaSnip/
rm -rf nvim-cmp
nvim .git
cd nvim/site/
nvim pack
cd pack/packer/start
cd packer.nvim
nviv README.md
cd packer
cd ../../..
cd nvim-cmp
cd L3MON4D3
rm -rf L3MON4D3
cd share
cd site/pack/packer/start
cd nvim-lsp-installer
nvim nvim-lsp-installer
nvim nvim-lsp-installer.lua
git clone "https://github.com/wbthomason/packer.nvim/commit/e4c2afb37d31e99b399425e102c58b091fbc16be"
git clone "https://github.com/wbthomason/packer.nvim/"
rm -rf packer.nvim
cd .con
clang
rm main.cpp
nvim test.lua
mkdir settings
cd main
nvim plugins.lua ls
mv main modules
cd modules
mv modules configs
cat list_plugins.lua
cd pack
cd packer/start
cd opt
cd start
cd ripgrep
rm -rf ripgrep
rg
cd .config/local/share/nvim/site
nvim main.lua
nvim lsp-installer.lua
mv lsp-installer.lua srv-configs.lua
touch telescope.lua
nvim l
nvim telescope.lua
nim
nvim autopairs
nvim autopairs.lua
nvim tree.lua
nano
vi
nvim packer_compiled.lua
nvim plugin
rm -rf plugin
cd plugin
nvim lua
cd treesitte
nvim treesitter.lua
cd local
cd share/nvim/site
rm -rf pack
i
tyisr
tyeisrniysrtuuuuupppyyyeee..
tsryitisryeytsrigo
go
cd ansible/playbook.yml
tyeisr
cd $(fzf)
cd $(fzf --type d)
fzf -t d
fd --type d
cd $(fd --type d | fzf)
cd ansible
tsr
y
compinit
tnysre
tysrei
msr
sr
m
ms
echo $(fzf)
man fzf
zle -al
bindkey
bindkey -L
print('')
echo
autoload -Uz promptinit\
promptinit
promptinit
echo $PROMPT
lsl
. ./.zshenv
source .zshenv
nvim $(fzf)
fzf --hidden
nvim .zshrk
export FZF_DEFAULT_OPTS='--bind=ctrl-y:up,ctrl-e:down'
echo $FZF_DEFAULT_OPTS
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:enter'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:confirm'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:return'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:select'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:print-query'
export FZF_DEFAULT_OPTS='--bind=ctrl-e:up,ctrl-y:down,ctrl-i:accept'
echo $EDITOR
cd /usr/lib
rm -rf node_modules
sudo rm -rf node_modules
sudo pacman Syu
fzf --height
fzf --height 40%
nvim .zshenv
cp /usr/share/X11/xkb/symbols/dwarf .
nvim dwarf
nvim pacman
git push --force
cndu
ncdu
yeitnsr
ntr
rtn
tr
trntrn
rnt
rn
trn
rntrn
w3m
w3m google.com
rmh
xinif
xinit
iaye
f
rm .w3m
rm -rf .w3m
nvim .tmux.conf
rm .tmux.conf
tmix
tmux list-keys | grep -t tab
tmux list-keys | grep -i tab
tmux list-keys | grep -i ctrl
tmux list-keys | grep -i control
tmux list-keys | grep -i esc
npm install -g intelephense
npm install -g semver
npm
npm -v
yay -S ttf-comic-mono-git
fzf -h
fc-list | fzf
cd zsh
nvim zshrc
nvim .zshrc
git clone "https://github.com/ryanoasis/nerd-fonts"
yay -S
nvim ComicMonoNerd.ttf
fc-list
mv ComicMonoNerd /usr/share/fonts/TTF/
mv ComicMonoNerd /usr/share/fonts/TTF
mv ComicMonoNerd /usr/share/fonts/TTF/ComicMono.ttf
cd /usr/share/fonts/TTF/ComicMono.ttf
mv ComicMonoNerd.ttf /usr/share/fonts/TTF
sudo mv ComicMonoNerd.ttf /usr/share/fonts/TTF
cd /usr/share/fonts/TTF/
cd pkglist
cd .pkglist
nvim aur
wkhtmltopdf
picom -h
picom -f
cd xo
inxi
compton
pgrep
pgrep compton
pgrep picom
kill 565
picom
feh naruto.jpg
mv ~/Downloads/download.jpeg ./abyss
feh abyss
mv abyss abyss.jpeg
source .xinitrcls
. .xinitrc
feh download.jpeg
1
cd .xinitrc
exif
fd
cd lua/configs/
nivm .xinitrc
\:q
e
exit
nvim tmux
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }exit
if-shell -b "[ "$(IS_NOT_FZF)" == true ]" { select-pane -L }
tmux select-pane -L
echo "caca"
export IS_NOT_FZF=true
echo $IS_NOT_FZF
eaayeitsmpyeiexitts
cd lua/
nvim colorscheme.lua
nviv
yay
yay -S paperview-git
paperview
convert
ls .dotfiles/feh
cd feh
cd wallpapers
paperview .
paperview . 20
paperview . 2
git clone "https://github.com/jtsiomb/xlivebg"
cd xlivebg
mv Makefile.in Makefile
unzip xlivebg-1.0.zip
cd xlivebg-1.0
make Makefile.in
rm -rf xlivebg-1.0
rm -rf xlivebg-1.0.zip
rm -rf xlivebg
yay -S xlivebg
cd picom
nvim picom.conf
opacity-rule = [\
    "100:class_g = 'Alacritty'"\

source ./tmux.conf
cd alacritty
nvim alacritty.yml
feh -h
nvim .xinitrc
source .xinitrc
t	
cd nvim/lua/configs
nvim keymaps
gcc main.cpp -o test
ch
nvim tmux.conf 
ndim tmux.conf
nvim I
yeitsyye yetsy yetisnvim 
yeisyheyeitytyytiasr
nvim 
lll
cd settings
nvim plugins.lua
cd lsp
nvim handlers.lua
source config
source ./config
cd lua/configs
nvim colorscheme.lua o
nvim options.lua
nvim chsh.txt
mv chsh.txt ./.dotfiles
ln ./.dotfiles/chsh.txt .
nvim con
ilhhjkj
nnn
cd i3
eeee
\

cd .config/i3
nvim config
t
mkdir yaml
mv dotfiles yaml
cd yaml
mv dotfiles ..
rm -rf yaml
mv dotfiles dotfiles.yml
nvim dotfiles.yml
rm dotfiles.yml
tmuxp load dotfiles
tmuxp load tmuxp.yml 
tmuxp
nvim edit
tmuxp edit
mkdir tmuxp
nvim dotfiles
 ls -lah
 nvim +FZF
 tmux rename-session
echo "Session name: " && read session-name && tmux rename-session $session-name
echo "Session name: " && read session-name && tmux rename-session $(session-name)
echo $session-name
echo "Session name: " && read session_name && tmux rename-session $(session_name)
tmux new -d 'while true; do date; sleep 1; done' \; pipe-pane 'cat > /tmp/log'\

tmux new
tmux new -d
 echo "Session name: " && read session_name && tmux rename-session $session_name
tmux new -d 'echo caca'
tmux new -d "echo caca"
tmux new "echo cici"
 clear && echo "Session name: " && read session_name && tmux rename-session $session_name
exitexit
rustup -v
rustup install
rustup update
rustup self
rustup self update
cargo
rustup default 
rustup default -h
rustup default stable
rustc --version
rust
rustc
mkdir rustLearn
cd rustLearn
rustc main.rs
./main
rustfmt main.rs
nvim main.rs
cargo --version
cargo new test
cargo new testo
cd testo
cargo build
cargo run
cargo check
cardo build --release
cargo build --release
cd target
./testo
cargo run --release
tmux attach -t dotfiles
read
read | fzf
echo $(read)
echo "$(read)"
print
print $(read)
read -p "rename session: "
read -p "rename session: " $(print)
read -p "rename session: " name && echo $name
read name && echo $name
echo $name
cd .config/tmuxp
tmux attach -t 3
tmux kill-server
tmux new "echo caca"
tmux new "read caca"
tmux load tmuxp.yml
exut
cd tmuxp
tmux list-sessios
tmuxp load tmuxp.yml
nvim tmuxp.yml
ssh pi@192.168.1.115
fr
setkbmap dwarf
nvim --noplugin
nvim main.cpp --noplugin
tmux a
nvim index.php

yei
oxit
tyeisrn
makE
nvim chsh.txt hugo-like
nvit toggleterm.lua
nvim qey
bucklespring
us
setxkbmap dwarq
setxkbmap dwarf
niv
nvim toggleterm.lua
openal
buckle -p
tmux list-sessiors
buckle --help
buckle 
buckle &
git clone https://github.com/tmux-plugins/tpm
nvim tmux t
echo $XDG_CONFIG_HOME
echo $XDG_CONFIG_HOME | cd
cd $XDG_CONFIG_HOME
mkdir plugins
mv tpm plugins
cd tpm
echo pheww
tyesrniatrns
tyiasr
yteiasrntyneisra
tyiasrne
srntyeia
sudo nvim
psw
chpsw
passwd
echo phewww
git rm --cached tmux/.config/tmux/plugins/tmux-continuum
git -f rm --cached tmux/.config/tmux/plugins/tmux-continuum
git rm -f --cached tmux/.config/tmux/plugins/tmux-continuum
nviq
nivm
cd /usr/bin
./g++
cd lua/configs/lsp
mkdir src
mkdir lib
mkdir include
unzip AlsikeLab.zip
nvim Mabe
cd bin
mkdir game game/src engine engine/include engine/src engine/external
git clone https://github.com/glfw/glfw
ls 
mkdir Engine
mv engine Engine
mv game Game
mv Game game
mv Engine engine
mv game myGame
cd ..ls
cmake -v
sudo pacman -S cmake
cmake --version
cmake .
rm CMakeCache.txt cmake_install.cmake Makefile
mkdir
mkdir dev
mkdir game
tree .
unzip glad
cd glad.zip
unzip glad.zip
mkdir ~/dev/myGame/engine/external/glad/
mv * ~/dev/myGame/engine/external/glad/
mv glad.c ~/dev/myGame/engine/src/
mv glad\ \(1\).zip ~/dev/myGame/engine/external/glad
cmake clean
cmake --help
rm *
rm -rf *
rm -rf game
rm -rf engine
git remote add myGame
git branch main
git push myGame
git push --set-upstream myGame master
cat compile_commands.json
nvim compile_commands.json
rm -rf .git
rm -rf glfw
git init
cd engine/external
git submodule add https://github.com/glfw/glfw .
git submodule add https://github.com/glfw/glfw ./glfw
git commit -m "Initial commit"
git remote add origin https://github.com/Ggcpp/myGame.git
git push -u origin "master"
cd gl
mv * ..
mv glad ../gladd
mv gladd glad
mv external/glad include
mv external/KHR include
rm -rf glad
rm -rf KHR
mkdir glad
unzip glad\ \(1\).zip
rm -rf glad\ \(1\).zip
cd in
cd GLFW
mkdin build
make Glad
make Engine
mabe glfw
make glfw
make Game
mkdir build
cd glfw
cd Game.dir
git commit -m "Add Glad"
rm glad.c
git commit
git commit -m "remove wrong glad file"
cd AlsikeStudio
nvim AlsikeStudioApp.cpp
nvim Application
cd ApplicationCreateInfo.l
nvim ApplicationCreateInfo.h
cd Win32
nvim WindowWin32.cpp
nvim Application.cpp
cd myGame
ln build/debug/compile_commands.json .
ln build/debug/compile_commands.json . --force
nvim README.md
lfs
nvim AlsikeMain.cpp
cd Game
cmake tnrss
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
make release
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=release ..
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=debug ..
make debug
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG
cmake -S . -B build/release -DCMAKE_BUILD_TYPE=RELEASE
cd release
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1
cat README.md
game/Game
sudo make run
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json .
git commit -m "Open a window"
cd engine/src
mkdir shaders
git commit -m "First triangle"
redshift -O 3000
git commit -m "First rectangle"
git commit -m "Shaders"
cd dev/myGame
sudo poweroff
./GAME
mv game/images engine
l
cd engine\\

mv engine/src/images game/src/
mv images ../../build/debug/game
poweroff
cd  /
feh opt/discord/discord.png
rm -rf tmux-continuum
git submodule https://github.com/tmux-plugins/tmux-continuum .
git submodule add https://github.com/tmux-plugins/tmux-continuum .
cd tmux/plugins
git submodule add https://github.com/tmux-plugins/tmux-continuum
nvim Makefile
cd plugins
mkdir test
nvim main.cpp
g++ main.cpp -o test
./test
cat sortie.txt
cd..
nvim init.lua
mike
fzf 
mv build/debug/engine/images game/src
feh images
nvim images
c d..
cd debud
cd agme
cd im
type
type images
tsrtS
mv src/images .
touch file.txt
cd images/
cd game/images
\n
nvim file.txt
cat file.txt
mabe
cd n
./Game
std::ofstream fichier { "sortie.txt" };\
    // On écrit un 3, un espace et un 4.\

cd images
feh image.png
feh game/images/image.png
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);	\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);\

git commit -m "Texture rendering"
make Release
ccmake
ccmake .
cmake
cmake ..
git submodule add https://github.com/g-truc/glm
cd engine/external/glfw
cd glm
cd .
maker un
cd Downloads
cd AlsikeLab
cd Alsike
nvim Engine
nvim Engine.h
cd Core
nvim Application.h
git commit -m "Coordinate systems"
rm CMakeCache.txt
rm .rf .cmake
rm -rf .cmake
rm -rf .cache
git commit -m "remove mistakes cmake stuff"\

git push 
nvim .gitignore
cd glad
cd CMakeFiles
cd glad.dir
cd game
git submodule add https://github.com/gabime/spdlog .
git submodule add https://github.com/gabime/spdlog ./spdlog
cd spdlog
maki
git commit -m "log system"
mv Engine.h Core
mkdir Core
mv Engine.cpp Core
sl
rm -rf CMakeFiles
rm -rf shaders
cd external
mkdir stb_image
cd stb_image
mv ../../src/stb_image.* .
nvim stb_image.cpp
nvim CMakeLists.txt
mv game/src/main.cpp engine/src
git commit -m "new architecture"
rm compile_commands.json
cd src/Core
rm Log.cpp
pulse
rmp
sudo pacman -S
sudo pacman -Syu
alsamixer
pavucontrol
addp
sudo reboot
git commit -m "set startup project for VS"
mkdir Window
sudo shutdown now
fzf
cd engine/include/Engine/Window
mv ApplicationCreateInfo.h ../Core
cd build
cd debug
cd engine/include
rm -rf Window
s
mkdir X11
mkdir Win32
mkdir OSX
cd engine/src/Window
cd X11
touch WindowX11.h
touch WindowX11.cpp
clear
reboot
git commit -m "Window abstraction"
mv WindowWin32 Win32
mv WindowWin32.h Win32
git commit -m "Add WindowWin32"
cd Downloads/AlsikeLab
cd include
cd Engine
mkdir Event
git commit -m "Basic event system"
tmux attach
hs
git commit -m "Add and define Win32 window"
ln compile_commands.json ../..
ln compile_commands.json ../.. --force
make help
clean
make clean
make update_mappings
make 
cd dev
cd test
rm sortie.txt
mkdir pipi
mkdir caca
cd pipi
cd caca
touch prout.cpp
cp caca/* pipi/
g++ main.cpp caca/*.cpp -o test
g++ main.cpp pipi/*.cpp -o test
g++ main.cpp pipi/*.cpp caca/*.cpp -o test
tmux
makEst
make compile_commands.json
maek
make rebuild_cache
cd src
mkdir Renderer
mv Renderer Graphics
cd Graphics
mkdir OpenGL
cd OpenGL
cd engine
cd src/Graphics/OpenGL
mv Shader.* OpenGLShader.*
mv Shader.h OpenGLShader.h
mv Shader.cpp OpenGLShader.cpp
cd -
cd Window
tree
git commit -m "Shader class + some refactoring"
git commit -m "#ifdef platform specific (remove from cmake)"
rm -rf build
cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_EXPORT_COMPILE_COMMANDS=1\
ln build/debug/compile_commands.json . --force
git commit -m "interface GraphicsContext + graphics api preprocessor"
git push
git add -A
git commit -m "update"
shutdown now
cd .config/nvim/lua/
cd configs/l
cd configs/
nvim list_plugins.lua
cd configs/lsp
nvim srv-configs.lua
nvim signature.lua
htop
nvim cmp.lua
cd .config/nvim/lua/configs/lsp
clang-format
clang-format --help
clang-format -style=llvm -dump-config > clang-format\

nvim clang-format
clangd
clangd --help
cd .config
touch config.yaml
mv .clang-format clang-format
rm clang-format
mv config.yaml clang-format.yaml
nvim clang-format.yaml
mv clang-format.yaml config.yaml
nvim config.yaml
cd .dotfiles
cd nvim
mkdir clangd
cd clangd
stow clangd
cd .config/nvim/lua/configs
nvim keymaps.lua
cd .config/nvim
cd lua
cd nvim/lua
cd configs
cd ..
cd tmux
cd build/debug
make
make run
ls
ls -a
rm .clang-format
nvim .clang-format
mv .clang-format caca
nvim caca
rm caca
nvim
cd
exi
cd 
cd .config/tmux
nvim tmux.conf
tmux kill-session 0
tmux kill-session -c 0
tmux kill-session -t 0
tmux list-sessions
nvim .
echo $TMUX
exit
echo $TMUX
tmux
